/*-----------------------------------------------------------------------------
 * Filename: CHIP_DEF.H     For Chipset: ITE.IT85XX
 *
 * Function: Register Definition for all code base reference
 *
 * Copyright (c) 2006-2009, ITE Tech. Inc. All Rights Reserved.
 *---------------------------------------------------------------------------*/

/* Spec.6.2 Plug and Play Configuration (PNPCFG) */
#define LDN         0x07
#define CHIPID1     0x20
#define CHIPID2     0x21
#define CHIPVER     0x22
#define SIOCTRL     0x23
#define SIOIRQ      0x25
#define SIOGP       0x26
#define SIOPWR      0x2D

/* Spec.6.3.4 Shared Memory Flash Interface Bridge (SMFI) */
#define FBCFG           (*(XBYTE *)0x1000)
#define FPCFG           (*(XBYTE *)0x1001)
#define FECBSR          (*(XBYTE *)0x1005)
#define FMSSR           (*(XBYTE *)0x1007)
#define SMECCS          (*(XBYTE *)0x1020)
#define SMHSR           (*(XBYTE *)0x1022)
#define FLHCTRL1R       (*(XBYTE *)0x1031)
#define FLHCTRL2R       (*(XBYTE *)0x1032)
#define UCCTRLR         (*(XBYTE *)0x1034)
#define HCTRL2R         (*(XBYTE *)0x1036)
#define R103A           (*(XBYTE *)0x103A)
#define ECINDAR0        (*(XBYTE *)0x103B)
#define ECINDAR1        (*(XBYTE *)0x103C)
#define ECINDAR2        (*(XBYTE *)0x103D)
#define ECINDAR3        (*(XBYTE *)0x103E)
#define ECINDDR         (*(XBYTE *)0x103F)
#define SCAR0L          (*(XBYTE *)0x1040)
#define SCAR0M          (*(XBYTE *)0x1041)
#define SCAR0H          (*(XBYTE *)0x1042)
#define SCAR1L          (*(XBYTE *)0x1043)
#define SCAR1M          (*(XBYTE *)0x1044)
#define SCAR1H          (*(XBYTE *)0x1045)
#define SCAR2L          (*(XBYTE *)0x1046)
#define SCAR2M          (*(XBYTE *)0x1047)
#define SCAR2H          (*(XBYTE *)0x1048)
#define SCAR3L          (*(XBYTE *)0x1049)
#define SCAR3M          (*(XBYTE *)0x104A)
#define SCAR3H          (*(XBYTE *)0x104B)
#define SCAR4L          (*(XBYTE *)0x104C)
#define SCAR4M          (*(XBYTE *)0x104D)
#define SCAR4H          (*(XBYTE *)0x104E)

/*      FBCFG       */
#define SSMC    BIT7
/*      SMECCS      */
#define HOSTWA  BIT5

#define P0BA0R          (*(XBYTE *)0x104F)
#define P0BA1R          (*(XBYTE *)0x1050)
#define P0ZR            (*(XBYTE *)0x1051)
#define P1BA0R          (*(XBYTE *)0x1052)
#define P1BA1R          (*(XBYTE *)0x1053)
#define P1ZR            (*(XBYTE *)0x1054)
#define DSINST          (*(XBYTE *)0x1055)
#define DSADR1          (*(XBYTE *)0x1056)
#define DSADR2          (*(XBYTE *)0x1057)
#define HINSTC1         (*(XBYTE *)0x1058)
#define DISSV		BIT3
#define DISS		BIT2
#define ENDPI		BIT1
#define ENDEI		BIT0

#define HINSTC2         (*(XBYTE *)0x1059)
#define HRAMWC          (*(XBYTE *)0x105A)
#define HRAMW0BA        (*(XBYTE *)0x105B)
#define HRAMW1BA        (*(XBYTE *)0x105C)
#define HRAMW0AAS       (*(XBYTE *)0x105D)
#define HRAMW1AAS       (*(XBYTE *)0x105E)

/* IT8510 SHARED MEMORY REGISTER */
#define MZCFG           (*(XBYTE *)0x1002)
#define SMZCFG          (*(XBYTE *)0x1003)
#define FECWPR          (*(XBYTE *)0x1006)
#define EHBSSR          (*(XBYTE *)0x1008)
#define SMETPORPR       (*(XBYTE *)0x1009)
#define SMETPOWPR       (*(XBYTE *)0x100A)
#define FMPSR           (*(XBYTE *)0x1010)
#define SMECTAR         (*(XBYTE *)0x1021)
#define SMECORPR0       (*(XBYTE *)0x1023)
#define SMECORPR1       (*(XBYTE *)0x1024)
#define SMECORPR2       (*(XBYTE *)0x1025)
#define SMECORPR3       (*(XBYTE *)0x1026)
#define SMECORPR4       (*(XBYTE *)0x1027)
#define SMECORPR5       (*(XBYTE *)0x1028)
#define SMECORPR0       (*(XBYTE *)0x1023)
#define SMECORPR1       (*(XBYTE *)0x1024)
#define SMECORPR2       (*(XBYTE *)0x1025)
#define SMECORPR3       (*(XBYTE *)0x1026)
#define SMECORPR4       (*(XBYTE *)0x1027)
#define SMECORPR5       (*(XBYTE *)0x1028)
#define SMECORPR6       (*(XBYTE *)0x1011)
#define SMECORPR7       (*(XBYTE *)0x1012)
#define SMECORPR8       (*(XBYTE *)0x1013)
#define SMECORPR9       (*(XBYTE *)0x1014)
#define SMECOWPR0       (*(XBYTE *)0x1029)
#define SMECOWPR1       (*(XBYTE *)0x102A)
#define SMECOWPR2       (*(XBYTE *)0x102B)
#define SMECOWPR3       (*(XBYTE *)0x102C)
#define SMECOWPR4       (*(XBYTE *)0x102D)
#define SMECOWPR5       (*(XBYTE *)0x102E)
#define SMECOWPR6       (*(XBYTE *)0x1015)
#define SMECOWPR7       (*(XBYTE *)0x1016)
#define SMECOWPR8       (*(XBYTE *)0x1017)
#define SMECOWPR9       (*(XBYTE *)0x1018)

/* Spec.7.2.4 Interrupt Controller Register (INTC) */
#define ISR0            (*(XBYTE *)0x1100)
#define ISR1            (*(XBYTE *)0x1101)
#define ISR2            (*(XBYTE *)0x1102)
#define ISR3            (*(XBYTE *)0x1103)
#define ISR4            (*(XBYTE *)0x1114)
#define ISR6            (*(XBYTE *)0x111C)
#define ISR7            (*(XBYTE *)0x1120)
#define ISR8            (*(XBYTE *)0x1124)
#define ISR9            (*(XBYTE *)0x1128)

#define IER0            (*(XBYTE *)0x1104)
#define IER1            (*(XBYTE *)0x1105)
#define IER2            (*(XBYTE *)0x1106)
#define IER3            (*(XBYTE *)0x1107)
#define IER4            (*(XBYTE *)0x1115)
#define IER6            (*(XBYTE *)0x111D)
#define IER7            (*(XBYTE *)0x1121)
#define IER8            (*(XBYTE *)0x1125)
#define IER9            (*(XBYTE *)0x1129)

#define IELMR0          (*(XBYTE *)0x1108)
#define IELMR1          (*(XBYTE *)0x1109)
#define IELMR2          (*(XBYTE *)0x110A)
#define IELMR3          (*(XBYTE *)0x110B)
#define IELMR4          (*(XBYTE *)0x1116)
#define IELMR6          (*(XBYTE *)0x111E)
#define IELMR7          (*(XBYTE *)0x1122)
#define IELMR8          (*(XBYTE *)0x1126)
#define IELMR9          (*(XBYTE *)0x112A)

#define IPOLR0          (*(XBYTE *)0x110C)
#define IPOLR1          (*(XBYTE *)0x110D)
#define IPOLR2          (*(XBYTE *)0x110E)
#define IPOLR3          (*(XBYTE *)0x110F)
#define IPOLR4          (*(XBYTE *)0x1117)
#define IPOLR6          (*(XBYTE *)0x111F)
#define IPOLR7          (*(XBYTE *)0x1123)
#define IPOLR8          (*(XBYTE *)0x1127)
#define IPOLR9          (*(XBYTE *)0x112B)

#define IVECT           (*(XBYTE *)0x1110)
#define INT0ST          (*(XBYTE *)0x1111)
#define PFAILR          (*(XBYTE *)0x1112)

/* Spec.7.14.4 EC Access to Host Controller Modules (EC2I Bridge)*/
#define IHIOA           (*(XBYTE *)0x1200)
#define IHD             (*(XBYTE *)0x1201)
#define LSIOHA          (*(XBYTE *)0x1202)
#define SIOLV           (*(XBYTE *)0x1203)
#define IBMAE           (*(XBYTE *)0x1204)
#define IBCTL           (*(XBYTE *)0x1205)

/* Spec.6.5.5 Host Interface Register (KBC)*/
#define KBHICR          (*(XBYTE *)0x1300)
#define KBIRQR          (*(XBYTE *)0x1302)
#define KBHISR          (*(XBYTE *)0x1304)
#define OBF     BIT(0x00)
#define IBF     BIT(0x01)
#define SYSF    BIT(0x02)
#define C_D     BIT(0x03)
#define KEYL    BIT(0x04)
#define AOBF    BIT(0x05)
#define GTIM    BIT(0x06)
#define PARE    BIT(0x07)

#define KBHIKDOR        (*(XBYTE *)0x1306)
#define KBHIMDOR        (*(XBYTE *)0x1308)
#define KBHIDIR         (*(XBYTE *)0x130A)

/* Spec.6.4.5 Wake Up Control Register (SWUC)*/
#define SWCTL1          (*(XBYTE *)0x1400)
#define SWCTL2          (*(XBYTE *)0x1402)
#define SWCTL3          (*(XBYTE *)0x1404)
#define SWCBALR         (*(XBYTE *)0x1408)
#define SWCBAHR         (*(XBYTE *)0x140A)
#define SWCIER          (*(XBYTE *)0x140C)
#define SWCHSTR         (*(XBYTE *)0x140E)
#define SWCHIER         (*(XBYTE *)0x1410)

/* Spec.6.6.5 EC Interface Register (PMC)*/
#define PM1STS          (*(XBYTE *)0x1500)
#define         OBF1    BIT(0x00)
#define         IBF1    BIT(0x01)
#define         Busy    BIT(0x02)
#define         C_D1    BIT(0x03)
#define         BURST   BIT(0x04)
#define         SCIEVT  BIT(0x05)
#define         SMIEVT  BIT(0x06)
#define PM1DO           (*(XBYTE *)0x1501)
#define PM1DOSCI        (*(XBYTE *)0x1502)
#define PM1DOSMI        (*(XBYTE *)0x1503)
#define PM1DI           (*(XBYTE *)0x1504)
#define PM1DISCI        (*(XBYTE *)0x1505)
#define PM1CTL          (*(XBYTE *)0x1506)
#define PM1IC           (*(XBYTE *)0x1507)
#define PM1IE           (*(XBYTE *)0x1508)

#define PM2STS          (*(XBYTE *)0x1510)
#define         OBF2            BIT(0x00)
#define         IBF2            BIT(0x01)
#define         DBG_En          BIT(0x02)
#define         C_D2            BIT(0x03)
#define PM2DO           (*(XBYTE *)0x1511)
#define PM2DOSCI        (*(XBYTE *)0x1512)
#define PM2DOSMI        (*(XBYTE *)0x1513)
#define PM2DI           (*(XBYTE *)0x1514)
#define PM2DISCI        (*(XBYTE *)0x1515)
#define PM2CTL          (*(XBYTE *)0x1516)
#define PM2IC           (*(XBYTE *)0x1517)
#define PM2IE           (*(XBYTE *)0x1518)

#define MBXCTRL         (*(XBYTE *)0x1519)
#define         MBXEN  BIT(0x07)

#define PM3STS          (*(XBYTE *)0x1520)
#define         OBF3            BIT(0x00)
#define         IBF3            BIT(0x01)
#define         DBG_En3         BIT(0x02)
#define         C_D3            BIT(0x03)
#define PM3DO           (*(XBYTE *)0x1521)
#define PM3DI           (*(XBYTE *)0x1522)
#define PM3CTL          (*(XBYTE *)0x1523)
#define PM3IC           (*(XBYTE *)0x1524)
#define PM3IE           (*(XBYTE *)0x1525)

#define MBXEC0          (*(XBYTE *)0x15F0)
#define MBXEC1          (*(XBYTE *)0x15F1)
#define MBXEC2          (*(XBYTE *)0x15F2)
#define MBXEC3          (*(XBYTE *)0x15F3)
#define MBXEC4          (*(XBYTE *)0x15F4)
#define MBXEC5          (*(XBYTE *)0x15F5)
#define MBXEC6          (*(XBYTE *)0x15F6)
#define MBXEC7          (*(XBYTE *)0x15F7)
#define MBXEC8          (*(XBYTE *)0x15F8)
#define MBXEC9          (*(XBYTE *)0x15F9)
#define MBXEC10         (*(XBYTE *)0x15FA)
#define MBXEC11         (*(XBYTE *)0x15FB)
#define MBXEC12         (*(XBYTE *)0x15FC)
#define MBXEC13         (*(XBYTE *)0x15FD)
#define MBXEC14         (*(XBYTE *)0x15FE)
#define MBXEC15         (*(XBYTE *)0x15FF)

/* Spec.7.5.3 General Purpose I/O Port (GPIO)*/
#define GCR             (*(XBYTE *)0x1600)
#define GCR1            (*(XBYTE *)0x16F0)
#define GCR2            (*(XBYTE *)0x16F1)
#define 		CK32OE	BIT(6)	// CK32K Out Enable
#define			SMB4E	BIT(5)	// SMBus Channel 4 Enable
#define 		PECIE	BIT(4)	// PECI Enable
#define GCR3            (*(XBYTE *)0x16F2)
#define GCR4            (*(XBYTE *)0x16F3)

#define GPIOA           (*(XBYTE *)0x1601)
#define GPIOB           (*(XBYTE *)0x1602)
#define GPIOC           (*(XBYTE *)0x1603)
#define GPIOD           (*(XBYTE *)0x1604)
#define GPIOE           (*(XBYTE *)0x1605)
#define GPIOF           (*(XBYTE *)0x1606)
#define GPIOG           (*(XBYTE *)0x1607)
#define GPIOH           (*(XBYTE *)0x1608)
#define GPIOI           (*(XBYTE *)0x1609)
#define GPIOJ           (*(XBYTE *)0x160A)
#define GPIOK           (*(XBYTE *)0x160B)
#define GPIOL           (*(XBYTE *)0x160C)
#define GPIOM           (*(XBYTE *)0x160D)

#define GPDRA           (*(XBYTE *)0x1601)
#define GPDRB           (*(XBYTE *)0x1602)
#define GPDRC           (*(XBYTE *)0x1603)
#define GPDRD           (*(XBYTE *)0x1604)
#define GPDRE           (*(XBYTE *)0x1605)
#define GPDRF           (*(XBYTE *)0x1606)
#define GPDRG           (*(XBYTE *)0x1607)
#define GPDRH           (*(XBYTE *)0x1608)
#define GPDRI           (*(XBYTE *)0x1609)
#define GPDRJ           (*(XBYTE *)0x160A)
#define GPDRK           (*(XBYTE *)0x160B)
#define GPDRL           (*(XBYTE *)0x160C)
#define GPDRM           (*(XBYTE *)0x160D)

#define GPIO_A0_CTRL    (*(XBYTE *)0x1610)
#define GPIO_A1_CTRL    (*(XBYTE *)0x1611)
#define GPIO_A2_CTRL    (*(XBYTE *)0x1612)
#define GPIO_A3_CTRL    (*(XBYTE *)0x1613)
#define GPIO_A4_CTRL    (*(XBYTE *)0x1614)
#define GPIO_A5_CTRL    (*(XBYTE *)0x1615)
#define GPIO_A6_CTRL    (*(XBYTE *)0x1616)
#define GPIO_A7_CTRL    (*(XBYTE *)0x1617)

#define GPIO_B0_CTRL    (*(XBYTE *)0x1618)
#define GPIO_B1_CTRL    (*(XBYTE *)0x1619)
#define GPIO_B2_CTRL    (*(XBYTE *)0x161A)
#define GPIO_B3_CTRL    (*(XBYTE *)0x161B)
#define GPIO_B4_CTRL    (*(XBYTE *)0x161C)
#define GPIO_B5_CTRL    (*(XBYTE *)0x161D)
#define GPIO_B6_CTRL    (*(XBYTE *)0x161E)
#define GPIO_B7_CTRL    (*(XBYTE *)0x161F)

#define GPIO_C0_CTRL    (*(XBYTE *)0x1620)
#define GPIO_C1_CTRL    (*(XBYTE *)0x1621)
#define GPIO_C2_CTRL    (*(XBYTE *)0x1622)
#define GPIO_C3_CTRL    (*(XBYTE *)0x1623)
#define GPIO_C4_CTRL    (*(XBYTE *)0x1624)
#define GPIO_C5_CTRL    (*(XBYTE *)0x1625)
#define GPIO_C6_CTRL    (*(XBYTE *)0x1626)
#define GPIO_C7_CTRL    (*(XBYTE *)0x1627)

#define GPIO_D0_CTRL    (*(XBYTE *)0x1628)
#define GPIO_D1_CTRL    (*(XBYTE *)0x1629)
#define GPIO_D2_CTRL    (*(XBYTE *)0x162A)
#define GPIO_D3_CTRL    (*(XBYTE *)0x162B)
#define GPIO_D4_CTRL    (*(XBYTE *)0x162C)
#define GPIO_D5_CTRL    (*(XBYTE *)0x162D)
#define GPIO_D6_CTRL    (*(XBYTE *)0x162E)
#define GPIO_D7_CTRL    (*(XBYTE *)0x162F)

#define GPIO_E0_CTRL    (*(XBYTE *)0x1630)
#define GPIO_E1_CTRL    (*(XBYTE *)0x1631)
#define GPIO_E2_CTRL    (*(XBYTE *)0x1632)
#define GPIO_E3_CTRL    (*(XBYTE *)0x1633)
#define GPIO_E4_CTRL    (*(XBYTE *)0x1634)
#define GPIO_E5_CTRL    (*(XBYTE *)0x1635)
#define GPIO_E6_CTRL    (*(XBYTE *)0x1636)
#define GPIO_E7_CTRL    (*(XBYTE *)0x1637)

#define GPIO_F0_CTRL    (*(XBYTE *)0x1638)
#define GPIO_F1_CTRL    (*(XBYTE *)0x1639)
#define GPIO_F2_CTRL    (*(XBYTE *)0x163A)
#define GPIO_F3_CTRL    (*(XBYTE *)0x163B)
#define GPIO_F4_CTRL    (*(XBYTE *)0x163C)
#define GPIO_F5_CTRL    (*(XBYTE *)0x163D)
#define GPIO_F6_CTRL    (*(XBYTE *)0x163E)
#define GPIO_F7_CTRL    (*(XBYTE *)0x163F)

#define GPIO_G0_CTRL    (*(XBYTE *)0x1640)
#define GPIO_G1_CTRL    (*(XBYTE *)0x1641)
#define GPIO_G2_CTRL    (*(XBYTE *)0x1642)
#define GPIO_G3_CTRL    (*(XBYTE *)0x1643)
#define GPIO_G4_CTRL    (*(XBYTE *)0x1644)
#define GPIO_G5_CTRL    (*(XBYTE *)0x1645)
#define GPIO_G6_CTRL    (*(XBYTE *)0x1646)
#define GPIO_G7_CTRL    (*(XBYTE *)0x1647)

#define GPIO_H0_CTRL    (*(XBYTE *)0x1648)
#define GPIO_H1_CTRL    (*(XBYTE *)0x1649)
#define GPIO_H2_CTRL    (*(XBYTE *)0x164A)
#define GPIO_H3_CTRL    (*(XBYTE *)0x164B)
#define GPIO_H4_CTRL    (*(XBYTE *)0x164C)
#define GPIO_H5_CTRL    (*(XBYTE *)0x164D)
#define GPIO_H6_CTRL    (*(XBYTE *)0x164E)
#define GPIO_H7_CTRL    (*(XBYTE *)0x164F)

#define GPIO_I0_CTRL    (*(XBYTE *)0x1650)
#define GPIO_I1_CTRL    (*(XBYTE *)0x1651)
#define GPIO_I2_CTRL    (*(XBYTE *)0x1652)
#define GPIO_I3_CTRL    (*(XBYTE *)0x1653)
#define GPIO_I4_CTRL    (*(XBYTE *)0x1654)
#define GPIO_I5_CTRL    (*(XBYTE *)0x1655)
#define GPIO_I6_CTRL    (*(XBYTE *)0x1656)
#define GPIO_I7_CTRL    (*(XBYTE *)0x1657)

#define GPIO_J0_CTRL    (*(XBYTE *)0x1658)
#define GPIO_J1_CTRL    (*(XBYTE *)0x1659)
#define GPIO_J2_CTRL    (*(XBYTE *)0x165A)
#define GPIO_J3_CTRL    (*(XBYTE *)0x165B)
#define GPIO_J4_CTRL    (*(XBYTE *)0x165C)
#define GPIO_J5_CTRL    (*(XBYTE *)0x165D)

#define GPIO_K0_CTRL    (*(XBYTE *)0x1690)
#define GPIO_K1_CTRL    (*(XBYTE *)0x1691)
#define GPIO_K2_CTRL    (*(XBYTE *)0x1692)
#define GPIO_K3_CTRL    (*(XBYTE *)0x1693)
#define GPIO_K4_CTRL    (*(XBYTE *)0x1694)
#define GPIO_K5_CTRL    (*(XBYTE *)0x1695)

#define GPIO_L0_CTRL    (*(XBYTE *)0x1698)
#define GPIO_L1_CTRL    (*(XBYTE *)0x1699)
#define GPIO_L2_CTRL    (*(XBYTE *)0x169A)
#define GPIO_L3_CTRL    (*(XBYTE *)0x169B)
#define GPIO_L4_CTRL    (*(XBYTE *)0x169C)
#define GPIO_L5_CTRL    (*(XBYTE *)0x169D)
#define GPIO_L6_CTRL    (*(XBYTE *)0x169E)
#define GPIO_L7_CTRL    (*(XBYTE *)0x169F)

#define GPIO_M0_CTRL    (*(XBYTE *)0x16A0)
#define GPIO_M1_CTRL    (*(XBYTE *)0x16A1)
#define GPIO_M2_CTRL    (*(XBYTE *)0x16A2)
#define GPIO_M3_CTRL    (*(XBYTE *)0x16A3)
#define GPIO_M4_CTRL    (*(XBYTE *)0x16A4)
#define GPIO_M5_CTRL    (*(XBYTE *)0x16A5)

#define GPCRA0          (*(XBYTE *)0x1610)
#define GPCRA1          (*(XBYTE *)0x1611)
#define GPCRA2          (*(XBYTE *)0x1612)
#define GPCRA3          (*(XBYTE *)0x1613)
#define GPCRA4          (*(XBYTE *)0x1614)
#define GPCRA5          (*(XBYTE *)0x1615)
#define GPCRA6          (*(XBYTE *)0x1616)
#define GPCRA7          (*(XBYTE *)0x1617)

#define GPCRB0          (*(XBYTE *)0x1618)
#define GPCRB1          (*(XBYTE *)0x1619)
#define GPCRB2          (*(XBYTE *)0x161A)
#define GPCRB3          (*(XBYTE *)0x161B)
#define GPCRB4          (*(XBYTE *)0x161C)
#define GPCRB5          (*(XBYTE *)0x161D)
#define GPCRB6          (*(XBYTE *)0x161E)
#define GPCRB7          (*(XBYTE *)0x161F)

#define GPCRC0          (*(XBYTE *)0x1620)
#define GPCRC1          (*(XBYTE *)0x1621)
#define GPCRC2          (*(XBYTE *)0x1622)
#define GPCRC3          (*(XBYTE *)0x1623)
#define GPCRC4          (*(XBYTE *)0x1624)
#define GPCRC5          (*(XBYTE *)0x1625)
#define GPCRC6          (*(XBYTE *)0x1626)
#define GPCRC7          (*(XBYTE *)0x1627)

#define GPCRD0          (*(XBYTE *)0x1628)
#define GPCRD1          (*(XBYTE *)0x1629)
#define GPCRD2          (*(XBYTE *)0x162A)
#define GPCRD3          (*(XBYTE *)0x162B)
#define GPCRD4          (*(XBYTE *)0x162C)
#define GPCRD5          (*(XBYTE *)0x162D)
#define GPCRD6          (*(XBYTE *)0x162E)
#define GPCRD7          (*(XBYTE *)0x162F)

#define GPCRE0          (*(XBYTE *)0x1630)
#define GPCRE1          (*(XBYTE *)0x1631)
#define GPCRE2          (*(XBYTE *)0x1632)
#define GPCRE3          (*(XBYTE *)0x1633)
#define GPCRE4          (*(XBYTE *)0x1634)
#define GPCRE5          (*(XBYTE *)0x1635)
#define GPCRE6          (*(XBYTE *)0x1636)
#define GPCRE7          (*(XBYTE *)0x1637)

#define GPCRF0          (*(XBYTE *)0x1638)
#define GPCRF1          (*(XBYTE *)0x1639)
#define GPCRF2          (*(XBYTE *)0x163A)
#define GPCRF3          (*(XBYTE *)0x163B)
#define GPCRF4          (*(XBYTE *)0x163C)
#define GPCRF5          (*(XBYTE *)0x163D)
#define GPCRF6          (*(XBYTE *)0x163E)
#define GPCRF7          (*(XBYTE *)0x163F)

#define GPCRG0          (*(XBYTE *)0x1640)
#define GPCRG1          (*(XBYTE *)0x1641)
#define GPCRG2          (*(XBYTE *)0x1642)
#define GPCRG3          (*(XBYTE *)0x1643)
#define GPCRG4          (*(XBYTE *)0x1644)
#define GPCRG5          (*(XBYTE *)0x1645)
#define GPCRG6          (*(XBYTE *)0x1646)
#define GPCRG7          (*(XBYTE *)0x1647)

#define GPCRH0          (*(XBYTE *)0x1648)
#define GPCRH1          (*(XBYTE *)0x1649)
#define GPCRH2          (*(XBYTE *)0x164A)
#define GPCRH3          (*(XBYTE *)0x164B)
#define GPCRH4          (*(XBYTE *)0x164C)
#define GPCRH5          (*(XBYTE *)0x164D)
#define GPCRH6          (*(XBYTE *)0x164E)
#define GPCRH7          (*(XBYTE *)0x164F)

#define GPCRI0          (*(XBYTE *)0x1650)
#define GPCRI1          (*(XBYTE *)0x1651)
#define GPCRI2          (*(XBYTE *)0x1652)
#define GPCRI3          (*(XBYTE *)0x1653)
#define GPCRI4          (*(XBYTE *)0x1654)
#define GPCRI5          (*(XBYTE *)0x1655)
#define GPCRI6          (*(XBYTE *)0x1656)
#define GPCRI7          (*(XBYTE *)0x1657)

#define GPCRJ0          (*(XBYTE *)0x1658)
#define GPCRJ1          (*(XBYTE *)0x1659)
#define GPCRJ2          (*(XBYTE *)0x165A)
#define GPCRJ3          (*(XBYTE *)0x165B)
#define GPCRJ4          (*(XBYTE *)0x165C)
#define GPCRJ5          (*(XBYTE *)0x165D)

#define GPCRK0          (*(XBYTE *)0x1690)
#define GPCRK1          (*(XBYTE *)0x1691)
#define GPCRK2          (*(XBYTE *)0x1692)
#define GPCRK3          (*(XBYTE *)0x1693)
#define GPCRK4          (*(XBYTE *)0x1694)
#define GPCRK5          (*(XBYTE *)0x1695)

#define GPCRL0          (*(XBYTE *)0x1698)
#define GPCRL1          (*(XBYTE *)0x1699)
#define GPCRL2          (*(XBYTE *)0x169A)
#define GPCRL3          (*(XBYTE *)0x169B)
#define GPCRL4          (*(XBYTE *)0x169C)
#define GPCRL5          (*(XBYTE *)0x169D)
#define GPCRL6          (*(XBYTE *)0x169E)
#define GPCRL7          (*(XBYTE *)0x169F)

#define GPCRM0          (*(XBYTE *)0x16A0)
#define GPCRM1          (*(XBYTE *)0x16A1)
#define GPCRM2          (*(XBYTE *)0x16A2)
#define GPCRM3          (*(XBYTE *)0x16A3)
#define GPCRM4          (*(XBYTE *)0x16A4)
#define GPCRM5          (*(XBYTE *)0x16A5)

#define GPIO_A_BUF      (*(XBYTE *)0x1661)
#define GPIO_B_BUF      (*(XBYTE *)0x1662)
#define GPIO_C_BUF      (*(XBYTE *)0x1663)
#define GPIO_D_BUF      (*(XBYTE *)0x1664)
#define GPIO_E_BUF      (*(XBYTE *)0x1665)
#define GPIO_F_BUF      (*(XBYTE *)0x1666)
#define GPIO_G_BUF      (*(XBYTE *)0x1667)
#define GPIO_H_BUF      (*(XBYTE *)0x1668)
#define GPIO_I_BUF      (*(XBYTE *)0x1669)
#define GPIO_J_BUF      (*(XBYTE *)0x166A)
#define GPIO_K_BUF      (*(XBYTE *)0x166B)
#define GPIO_L_BUF      (*(XBYTE *)0x166C)
#define GPIO_M_BUF      (*(XBYTE *)0x166D)

#define GPDMRA          (*(XBYTE *)0x1661)
#define GPDMRB          (*(XBYTE *)0x1662)
#define GPDMRC          (*(XBYTE *)0x1663)
#define GPDMRD          (*(XBYTE *)0x1664)
#define GPDMRE          (*(XBYTE *)0x1665)
#define GPDMRF          (*(XBYTE *)0x1666)
#define GPDMRG          (*(XBYTE *)0x1667)
#define GPDMRH          (*(XBYTE *)0x1668)
#define GPDMRI          (*(XBYTE *)0x1669)
#define GPDMRJ          (*(XBYTE *)0x166A)
#define GPDMRK          (*(XBYTE *)0x166B)
#define GPDMRL          (*(XBYTE *)0x166C)
#define GPDMRM          (*(XBYTE *)0x166D)

#define GPOTB           (*(XBYTE *)0x1672)
#define GPOTD           (*(XBYTE *)0x1674)
#define GPOTH           (*(XBYTE *)0x1678)

/* Spec.7.9.4 PS/2 Interface (PS/2)*/
#define PSCTL1          (*(XBYTE *)0x1700)
#define PSCTL2          (*(XBYTE *)0x1701)
#define PSCTL3          (*(XBYTE *)0x1702)
#define PSINT1          (*(XBYTE *)0x1704)
#define PSINT2          (*(XBYTE *)0x1705)
#define PSINT3          (*(XBYTE *)0x1706)
#define PSSTS1          (*(XBYTE *)0x1708)
#define PSSTS2          (*(XBYTE *)0x1709)
#define PSSTS3          (*(XBYTE *)0x170A)
#define TDS             BIT(3)              // Transaction Done Status
#define SS              BIT(2)              // Start Status
    
#define PSDAT1          (*(XBYTE *)0x170C)
#define PSDAT2          (*(XBYTE *)0x170D)
#define PSDAT3          (*(XBYTE *)0x170E)

/* Spec.7.12.4 PWM (PWM)*/
#define PWM_C0CPRS      (*(XBYTE *)0x1800)
#define PWM_CTR         (*(XBYTE *)0x1801)
#define PWM_DCR0        (*(XBYTE *)0x1802)
#define PWM_DCR1        (*(XBYTE *)0x1803)
#define PWM_DCR2        (*(XBYTE *)0x1804)
#define PWM_DCR3        (*(XBYTE *)0x1805)
#define PWM_DCR4        (*(XBYTE *)0x1806)
#define PWM_DCR5        (*(XBYTE *)0x1807)
#define PWM_DCR6        (*(XBYTE *)0x1808)
#define PWM_DCR7        (*(XBYTE *)0x1809)
#define PWMPOL          (*(XBYTE *)0x180A)
#define PWM_PCFSR       (*(XBYTE *)0x180B)
#define PWM_PCSSGL      (*(XBYTE *)0x180C)
#define PWM_PCSSGH      (*(XBYTE *)0x180D)
#define PWM_PCSSGH      (*(XBYTE *)0x180D)
#define PWM_CR256PCSSG  (*(XBYTE *)0x180E)
#define PWM_FAN2CNF     (*(XBYTE *)0x1811)
#define PWM_AF1SRR      (*(XBYTE *)0x1812)
#define PWM_AF2SRR      (*(XBYTE *)0x1813)
#define PWM_MOPL        (*(XBYTE *)0x1814)
#define PWM_F1MPDCR     (*(XBYTE *)0x1815)
#define PWM_F2MPDCR     (*(XBYTE *)0x1816)
#define PWM_F1TLIMITR   (*(XBYTE *)0x1817)
#define PWM_F2TLIMITR   (*(XBYTE *)0x1818)
#define PWM_F1ATLIMITR  (*(XBYTE *)0x1819)
#define PWM_F2ATLIMITR  (*(XBYTE *)0x181A)
#define PWM_ZHYSR       (*(XBYTE *)0x181B)
#define PWM_F1TRR       (*(XBYTE *)0x181C)
#define PWM_F2TRR       (*(XBYTE *)0x181D)
#define PWM_F1TLRR      (*(XBYTE *)0x181E)
#define PWM_F1TMRR      (*(XBYTE *)0x181F)
#define PWM_F2TLRR      (*(XBYTE *)0x1820)
#define PWM_F2TMRR      (*(XBYTE *)0x1821)
#define PWM_ZINTSCR     (*(XBYTE *)0x1822)
#define PWM_ZTIER       (*(XBYTE *)0x1823)
#define PWM_C1CPRS      (*(XBYTE *)0x1824)
#define PWM_C2CPRS      (*(XBYTE *)0x1825)
#define PWM_C3CPRS      (*(XBYTE *)0x1826)
#define PWM_C4CPRS      (*(XBYTE *)0x1827)
#define PWM_C4MCPRS     (*(XBYTE *)0x1828)
#define PWM_C5CPRS      (*(XBYTE *)0x1829)
#define PWM_C5MCPRS     (*(XBYTE *)0x182A)
#define PWM_C6CPRS      (*(XBYTE *)0x182B)
#define PWM_C6MCPRS     (*(XBYTE *)0x182C)
#define PWM_C7CPRS      (*(XBYTE *)0x182D)
#define PWM_C7MCPRS     (*(XBYTE *)0x182E)

#define PWM_CLK6MSEL    (*(XBYTE *)0x1840)
#define PWM_CTR1        (*(XBYTE *)0x1841)
#define PWM_CTR2        (*(XBYTE *)0x1842)
#define PWM_CTR3        (*(XBYTE *)0x1843)

/* Spec.7.11.4 Analog To Digital Converter (ADC)*/
#define ADCSTS          (*(XBYTE *)0x1900)
#define ADCCFG          (*(XBYTE *)0x1901)
#define ADCCTL          (*(XBYTE *)0x1902)
#define VCH0CTL         (*(XBYTE *)0x1904)
#define KDCTL           (*(XBYTE *)0x1905)
#define VCH1CTL         (*(XBYTE *)0x1906)
#define VCH1DATL        (*(XBYTE *)0x1907)
#define VCH1DATM        (*(XBYTE *)0x1908)
#define VCH2CTL         (*(XBYTE *)0x1909)
#define VCH2DATL        (*(XBYTE *)0x190A)
#define VCH2DATM        (*(XBYTE *)0x190B)
#define VCH3CTL         (*(XBYTE *)0x190C)
#define VCH3DATL        (*(XBYTE *)0x190D)
#define VCH3DATM        (*(XBYTE *)0x190E)
#define VCH4CTL         (*(XBYTE *)0x190F)
#define VCH4DATL        (*(XBYTE *)0x1910)
#define VCH4DATM        (*(XBYTE *)0x1911)
#define VHSCDBL         (*(XBYTE *)0x1914)
#define VHSCDBM         (*(XBYTE *)0x1915)
#define VCH0DATL        (*(XBYTE *)0x1918)
#define VCH0DATM        (*(XBYTE *)0x1919)
#define VHSGCDBL        (*(XBYTE *)0x191C)
#define VHSGCDBM        (*(XBYTE *)0x191D)

/* Spec.7.10.4 Digital To Analog Converter (DAC)*/
#define DACCTRL         (*(XBYTE *)0x1A00)  /*IT8510*/
#define DACPDREG        (*(XBYTE *)0x1A01)
#define DACDAT0         (*(XBYTE *)0x1A02)
#define DACDAT1         (*(XBYTE *)0x1A03)
#define DACDAT2         (*(XBYTE *)0x1A04)
#define DACDAT3         (*(XBYTE *)0x1A05)
#define DACDAT4         (*(XBYTE *)0x1A06)
#define DACDAT5         (*(XBYTE *)0x1A07)

/* Spec.7.3.4 Wake-Up Control (WUC)*/
#define WUEMR1          (*(XBYTE *)0x1B00)
#define WUEMR2          (*(XBYTE *)0x1B01)
#define WUEMR3          (*(XBYTE *)0x1B02)
#define WUEMR4          (*(XBYTE *)0x1B03)
#define WUEMR6          (*(XBYTE *)0x1B10)
#define WUEMR7          (*(XBYTE *)0x1B14)

#define WUESR1          (*(XBYTE *)0x1B04)
#define WUESR2          (*(XBYTE *)0x1B05)
#define WUESR3          (*(XBYTE *)0x1B06)
#define WUESR4          (*(XBYTE *)0x1B07)
#define WUESR6          (*(XBYTE *)0x1B11)
#define WUESR7          (*(XBYTE *)0x1B15)

#define WUENR1          (*(XBYTE *)0x1B08)
#define WUENR2          (*(XBYTE *)0x1B09)
#define WUENR3          (*(XBYTE *)0x1B0A)
#define WUENR4          (*(XBYTE *)0x1B0B)
#define WUENR6          (*(XBYTE *)0x1B12)
#define WUENR7          (*(XBYTE *)0x1B16)

/* Spec.7.7.4 SMBUS I/O registers (SMBUS)*/
#define HOSTA_A         (*(XBYTE *)0x1C00)
#define HOSTA_B         (*(XBYTE *)0x1C11)
#define HOSTA_C         (*(XBYTE *)0x1C29)
#define HOSTA_D         (*(XBYTE *)0x1C35)
#define HOCTL_A         (*(XBYTE *)0x1C01)
#define HOCTL_B         (*(XBYTE *)0x1C12)
#define HOCTL_C         (*(XBYTE *)0x1C2A)
#define HOCTL_D         (*(XBYTE *)0x1C36)
#define HOCMD_A         (*(XBYTE *)0x1C02)
#define HOCMD_B         (*(XBYTE *)0x1C13)
#define HOCMD_C         (*(XBYTE *)0x1C2B)
#define HOCMD_D         (*(XBYTE *)0x1C37)
#define TRASLA_A        (*(XBYTE *)0x1C03)
#define TRASLA_B        (*(XBYTE *)0x1C14)
#define TRASLA_C        (*(XBYTE *)0x1C2C)
#define TRASLA_D        (*(XBYTE *)0x1C38)
#define D0REG_A         (*(XBYTE *)0x1C04)
#define D0REG_B         (*(XBYTE *)0x1C15)
#define D0REG_C         (*(XBYTE *)0x1C2D)
#define D0REG_D         (*(XBYTE *)0x1C39)
#define D1REG_A         (*(XBYTE *)0x1C05)
#define D1REG_B         (*(XBYTE *)0x1C16)
#define D1REG_C         (*(XBYTE *)0x1C2E)
#define D1REG_D         (*(XBYTE *)0x1C3A)
#define HOBDB_A         (*(XBYTE *)0x1C06)
#define HOBDB_B         (*(XBYTE *)0x1C17)
#define HOBDB_C         (*(XBYTE *)0x1C2F)
#define HOBDB_D         (*(XBYTE *)0x1C3B)
#define PECERC_A        (*(XBYTE *)0x1C07)
#define PECERC_B        (*(XBYTE *)0x1C18)
#define PECERC_C        (*(XBYTE *)0x1C30)
#define PECERC_D        (*(XBYTE *)0x1C3C)
#define RESLADR_A       (*(XBYTE *)0x1C08)
#define RESLADR_B       (*(XBYTE *)0x1C19)
#define SLDA_A          (*(XBYTE *)0x1C09)
#define SLDA_B          (*(XBYTE *)0x1C1A)
#define SMBPCTL_A       (*(XBYTE *)0x1C0A)
#define SMBPCTL_B       (*(XBYTE *)0x1C1B)
#define SMBPCTL_C       (*(XBYTE *)0x1C31)
#define SMBPCTL_D       (*(XBYTE *)0x1C3D)
#define SLSTA_A         (*(XBYTE *)0x1C0B)
#define SLSTA_B         (*(XBYTE *)0x1C1C)
#define SICR_A          (*(XBYTE *)0x1C0C)
#define SICR_B          (*(XBYTE *)0x1C1D)
#define NDADR_A         (*(XBYTE *)0x1C0D)
#define NDADR_B         (*(XBYTE *)0x1C1E)
#define NDLB_A          (*(XBYTE *)0x1C0E)
#define NDLB_B          (*(XBYTE *)0x1C1F)
#define NDHB_A          (*(XBYTE *)0x1C0F)
#define NDHB_B          (*(XBYTE *)0x1C20)
#define HOCTL2_A        (*(XBYTE *)0x1C10)
#define HOCTL2_B        (*(XBYTE *)0x1C21)
#define HOCTL2_C        (*(XBYTE *)0x1C32)
#define HOCTL2_D        (*(XBYTE *)0x1C3E)

#define SMB_4P7USL      (*(XBYTE *)0x1C22)
#define SMB_4P0USH      (*(XBYTE *)0x1C23)
#define SMB_300NSREG    (*(XBYTE *)0x1C24)
#define SMB_250NSREG    (*(XBYTE *)0x1C25)
#define SMB_25MSREG     (*(XBYTE *)0x1C26)
#define SMB_45P3USLREG  (*(XBYTE *)0x1C27)
#define SMB_45P3USHREG  (*(XBYTE *)0x1C28)
#define SMB_4P7A4P0H    (*(XBYTE *)0x1C33)
#define SLVISEL         (*(XBYTE *)0x1C34)

/* Spec.7.4.4 Keyboard Matrix Scan Controller (KBSCAN)*/
#define KSOL            (*(XBYTE *)0x1D00)
#define KSOH1           (*(XBYTE *)0x1D01)
#define KSOCTRL         (*(XBYTE *)0x1D02)
#define KSOH2           (*(XBYTE *)0x1D03)
#define KSI             (*(XBYTE *)0x1D04)
#define KSICTRL         (*(XBYTE *)0x1D05)

#define KSIGCTRL        (*(XBYTE *)0x1D06)
#define KSIGOEN         (*(XBYTE *)0x1D07)
#define KSIGDAT         (*(XBYTE *)0x1D08)
#define KSIGDMRR        (*(XBYTE *)0x1D09)
#define KSOGCTRL        (*(XBYTE *)0x1D0A)
#define KSOGOEN         (*(XBYTE *)0x1D0B)
#define KSOGDMRR        (*(XBYTE *)0x1D0C)

#define KSIGCTRLR       (*(XBYTE *)0x1D06)
#define KSIGOENR        (*(XBYTE *)0x1D07)
#define KSIGDATR        (*(XBYTE *)0x1D08)
#define KSIGDMRRR       (*(XBYTE *)0x1D09)
#define KSOGCTRLR       (*(XBYTE *)0x1D0A)
#define KSOGOENR        (*(XBYTE *)0x1D0B)
#define KSOGDMRRR       (*(XBYTE *)0x1D0C)

/* Spec.7.6.3 EC Clock and Power Management Controller (ECPM)*/
#define CFSELR          (*(XBYTE *)0x1E00)
#define CGCTRL1R        (*(XBYTE *)0x1E01)
#define CGCTRL2R        (*(XBYTE *)0x1E02)
#define CGCTRL3R        (*(XBYTE *)0x1E05)
#define PLLCTRL         (*(XBYTE *)0x1E03)
#define AUTOCG          (*(XBYTE *)0x1E04)
#define PLLFREQR        (*(XBYTE *)0x1E06)

/* Spec.7.15.4 External Timer and Watchdog (ETWD)*/
#define ETWCFG          (*(XBYTE *)0x1F01)
#define ET1PSR          (*(XBYTE *)0x1F02)
#define ET1CNTLHR       (*(XBYTE *)0x1F03)
#define ET1CNTLLR       (*(XBYTE *)0x1F04)
#define ET2PSR          (*(XBYTE *)0x1F0A)
#define ET2CNTLHR       (*(XBYTE *)0x1F0B)
#define ET2CNTLLR       (*(XBYTE *)0x1F0C)
#define ET2CNTLH2R      (*(XBYTE *)0x1F0E)
#define ETWCTRL         (*(XBYTE *)0x1F05)
#define EWDCNTLHR       (*(XBYTE *)0x1F09)
#define EWDCNTLLR       (*(XBYTE *)0x1F06)
#define EWDKEYR         (*(XBYTE *)0x1F07)

#define RSTSCR          (*(XBYTE *)0x1F08)

/* Spec.7.16.4 General Control (GCTRL)*/
#define ECHIPID1        (*(XBYTE *)0x2000)
#define ECHIPID2        (*(XBYTE *)0x2001)
#define ECHIPVER        (*(XBYTE *)0x2002)

#define IDR             (*(XBYTE *)0x2004)

#define RSTS            (*(XBYTE *)0x2006)
#define RSTC1           (*(XBYTE *)0x2007)
#define RSTC2           (*(XBYTE *)0x2008)
#define RSTC3           (*(XBYTE *)0x2009)
#define RSTC4           (*(XBYTE *)0x2011)
#define RSTDMMC         (*(XBYTE *)0x2010)
#define BADRSEL         (*(XBYTE *)0x200A)
#define WNCKR           (*(XBYTE *)0x200B)
#define OSCTRL          (*(XBYTE *)0x200C)
#define SPCTRL1         (*(XBYTE *)0x200D)
#define RSTCH           (*(XBYTE *)0x200E)
#define GENIRQ          (*(XBYTE *)0x200F)

/* Spec.7.17.4 External GPIO Controller (EGPC) */
#define EADDR           (*(XBYTE *)0x2100)
#define EDAT            (*(XBYTE *)0x2101)
#define ECNT            (*(XBYTE *)0x2102)
#define ESTS            (*(XBYTE *)0x2103)
#define CDS     BIT(0x00)

/* Spec.7.18.4 Battery-backed SRAM (BRAM) */
#define SRAM_REG00      (*(XBYTE *)0x2280)
#define SRAM_REG01      (*(XBYTE *)0x2281)
#define SRAM_REG02      (*(XBYTE *)0x2282)
#define SRAM_REG03      (*(XBYTE *)0x2283)
#define SRAM_REG04      (*(XBYTE *)0x2284)
#define SRAM_REG05      (*(XBYTE *)0x2285)
#define SRAM_REG06      (*(XBYTE *)0x2286)
#define SRAM_REG07      (*(XBYTE *)0x2287)
#define SRAM_REG08      (*(XBYTE *)0x2288)
#define SRAM_REG09      (*(XBYTE *)0x2289)
#define SRAM_REG0A      (*(XBYTE *)0x228A)
#define SRAM_REG0B      (*(XBYTE *)0x228B)
#define SRAM_REG0C      (*(XBYTE *)0x228C)
#define SRAM_REG0D      (*(XBYTE *)0x228D)
#define SRAM_REG0E      (*(XBYTE *)0x228E)
#define SRAM_REG0F      (*(XBYTE *)0x228F)
#define SRAM_REG10      (*(XBYTE *)0x2290)
#define SRAM_REG11      (*(XBYTE *)0x2291)
#define SRAM_REG12      (*(XBYTE *)0x2292)
#define SRAM_REG13      (*(XBYTE *)0x2293)
#define SRAM_REG14      (*(XBYTE *)0x2294)
#define SRAM_REG15      (*(XBYTE *)0x2295)
#define SRAM_REG16      (*(XBYTE *)0x2296)
#define SRAM_REG17      (*(XBYTE *)0x2297)
#define SRAM_REG18      (*(XBYTE *)0x2298)
#define SRAM_REG19      (*(XBYTE *)0x2299)
#define SRAM_REG1A      (*(XBYTE *)0x229A)
#define SRAM_REG1B      (*(XBYTE *)0x229B)
#define SRAM_REG1C      (*(XBYTE *)0x229C)
#define SRAM_REG1D      (*(XBYTE *)0x229D)
#define SRAM_REG1E      (*(XBYTE *)0x229E)
#define SRAM_REG1F      (*(XBYTE *)0x229F)
#define SRAM_REG20      (*(XBYTE *)0x22A0)
#define SRAM_REG21      (*(XBYTE *)0x22A1)
#define SRAM_REG22      (*(XBYTE *)0x22A2)
#define SRAM_REG23      (*(XBYTE *)0x22A3)
#define SRAM_REG24      (*(XBYTE *)0x22A4)
#define SRAM_REG25      (*(XBYTE *)0x22A5)
#define SRAM_REG26      (*(XBYTE *)0x22A6)
#define SRAM_REG27      (*(XBYTE *)0x22A7)
#define SRAM_REG28      (*(XBYTE *)0x22A8)
#define SRAM_REG29      (*(XBYTE *)0x22A9)
#define SRAM_REG2A      (*(XBYTE *)0x22AA)
#define SRAM_REG2B      (*(XBYTE *)0x22AB)
#define SRAM_REG2C      (*(XBYTE *)0x22AC)
#define SRAM_REG2D      (*(XBYTE *)0x22AD)
#define SRAM_REG2E      (*(XBYTE *)0x22AE)
#define SRAM_REG2F      (*(XBYTE *)0x22AF)
#define SRAM_REG30      (*(XBYTE *)0x22B0)
#define SRAM_REG31      (*(XBYTE *)0x22B1)
#define SRAM_REG32      (*(XBYTE *)0x22B2)
#define SRAM_REG33      (*(XBYTE *)0x22B3)
#define SRAM_REG34      (*(XBYTE *)0x22B4)
#define SRAM_REG35      (*(XBYTE *)0x22B5)
#define SRAM_REG36      (*(XBYTE *)0x22B6)
#define SRAM_REG37      (*(XBYTE *)0x22B7)
#define SRAM_REG38      (*(XBYTE *)0x22B8)
#define SRAM_REG39      (*(XBYTE *)0x22B9)
#define SRAM_REG3A      (*(XBYTE *)0x22BA)
#define SRAM_REG3B      (*(XBYTE *)0x22BB)
#define SRAM_REG3C      (*(XBYTE *)0x22BC)
#define SRAM_REG3D      (*(XBYTE *)0x22BD)
#define SRAM_REG3E      (*(XBYTE *)0x22BE)
#define SRAM_REG3F      (*(XBYTE *)0x22BF)

/* Spec.7.19.5 Consumer IR (CIR) */
#define C0DR            (*(XBYTE *)0x2300)
#define C0MSTCR         (*(XBYTE *)0x2301)
#define _C0MSTCR_RESET  BIT(0x00)
#define _FIFOCLR        BIT(0x01)
#define _FIFOTL0        BIT(0x02)
#define _FIFOTL1        BIT(0x03)
#define _ILE            BIT(0x04)
#define _ILSEL          BIT(0x05)
//#define ILSEL       5   // Internal Loopback Select
//#define ILE         4   // Internal Loopback Enable
//#define FIFOCLR     1   // FIFO Clear
//#define RESET       0   // Reset

#define C0IER           (*(XBYTE *)0x2302)
#define _TLDLIE         BIT(0x00)
#define _RDAIE          BIT(0x01)
#define _RFOIE          BIT(0x02)
#define _WCIT           BIT(0x06)
#define _IEC            BIT(0x07)
#define IEC         7   // Interrupt Enable Function Control
#define WCIT        6   // Wakeup-Code Interrupt Type
#define RFOIE       2   // Receiver FIFO Overrun Interrupt Enable
#define RDAIE       1   // Receiver Data Available Interrupt Enable
#define TLDLIE      0   // Transmitter Low Data Level Interrupt Enable

#define C0IIR           (*(XBYTE *)0x2303)
#define _TLDLI          BIT(0x00)
#define _RDAI           BIT(0x01)
#define _RFOI           BIT(0x02)
#define _NIP            BIT(0x07)
#define NIP         7   // No Interrupt Pending
#define RFOI        2   // Receiver FIFO OverRun Interrupt
#define RDAI        1
#define TLDLI       0

#define C0CFR           (*(XBYTE *)0x2304)
#define _CFQ0           BIT(0x00)
#define _CFQ1           BIT(0x01)
#define _CFQ2           BIT(0x02)
#define _CFQ3           BIT(0x03)
#define _CFQ4           BIT(0x04)
#define _HCFS           BIT(0x05)
#define HCFS        5   // High-Speed Carruer Frequency Select

#define C0RCR           (*(XBYTE *)0x2305)
#define _RXDCR0         BIT(0x00)
#define _RXDCR1         BIT(0x01)
#define _RXDCR2         BIT(0x02)
#define _RXACT          BIT(0x03)
#define _RXEND          BIT(0x04)
#define _RDWOS          BIT(0x05)
#define _RXEN           BIT(0x07)
#define RXEN        7   // Reveiver Enable
#define RDWOS       5   // Receiver Data Without Sync.
#define RXEND       4   // Receiver Demodulation Enable
#define RXACT       3   // Receiver Active

#define C0TCR           (*(XBYTE *)0x2306)
#define _TXMPW0         BIT(0x00)
#define _TXMPW1         BIT(0x01)
#define _TXMPW2         BIT(0x02)
#define _TXMPM0         BIT(0x03)
#define _TXMPM1         BIT(0x04)
#define _TXENDF         BIT(0x05)
#define _TXRLE          BIT(0x06)

#define C0SCK           (*(XBYTE *)0x2307)
#define _SCKS           BIT(0x00)
#define _TXDCKG         BIT(0x01)
#define _DLL1P8E        BIT(0x02)
#define _DLLTE          BIT(0x03)
#define _BRCM0          BIT(0x04)
#define _BRCM1          BIT(0x05)
#define _BRCM2          BIT(0x06)
#define _DLLOCK         BIT(0x07)
#define DLLOCK      7   // DLL Lock
#define DLL1P8E     2   // DLL 1.8432M Enable
#define TXDCKG      1   // TXD Clock Gating
#define SCKS        0   // Slow Clock Select

#define C0BDLR          (*(XBYTE *)0x2308)
#define C0BDHR          (*(XBYTE *)0x2309)
#define C0TFSR          (*(XBYTE *)0x230A)
#define C0RFSR          (*(XBYTE *)0x230B)
#define C0WCSSR         (*(XBYTE *)0x230C)
#define C0WCL           (*(XBYTE *)0x230D)
#define C0WCR           (*(XBYTE *)0x230E)
#define C0WPS           (*(XBYTE *)0x230F)
#define _CIRPOSIE       BIT(0x00)
#define _CIRPOIS        BIT(0x01)
#define _CORPOII        BIT(0x02)
#define _RCRST          BIT(0x04)
#define _WCRST          BIT(0x05)
#define WCRST       5   // CIR Wakeup Code Writing Counter Resetting Bit
#define RCRST       4   // CIR Wakeup Code Reading Counter Resetting Bit
#define CIRPOII     2   // CIR Power On/Off Interrupt Identification
#define CIRPOIS     1   // CIR Power On/Off Interrupt Status
#define CIRPOSIE    0   // CIR Power On/Off Status Interrupt Enable
#define CSCRR           (*(XBYTE *)0x2310)

/* Spec.7.22.4 Debug Interface (DBGR)*/
#define BKA1L           (*(XBYTE *)0x2510)
#define BKA1M           (*(XBYTE *)0x2511)
#define BKA1H           (*(XBYTE *)0x2512)
#define BKA2L           (*(XBYTE *)0x2513)
#define BKA2M           (*(XBYTE *)0x2514)
#define BKA2H           (*(XBYTE *)0x2515)
#define BKA3L           (*(XBYTE *)0x2516)
#define BKA3M           (*(XBYTE *)0x2517)
#define BKA3H           (*(XBYTE *)0x2518)

/* Spec.7.20.5 Serial Peripheral Interface (SSPI) */
#define SPIDATA         (*(XBYTE *)0x2600)
#define SPICTRL1        (*(XBYTE *)0x2601)
#define SPICTRL2        (*(XBYTE *)0x2602)
#define SPICTRL3        (*(XBYTE *)0x2604)
#define SPISTS          (*(XBYTE *)0x2603)

/* Spec.7.21.4 Serial Port (UART) */
#define UART_RBR        (*(XBYTE *)0x2700)
#define UART_IER        (*(XBYTE *)0x2701)
#define UART_IIR        (*(XBYTE *)0x2702)
#define UART_LCR        (*(XBYTE *)0x2703)
#define UART_MCR        (*(XBYTE *)0x2704)
#define UART_DLL        (*(XBYTE *)0x2700)
#define UART_DLM        (*(XBYTE *)0x2701)
#define UART_LSR        (*(XBYTE *)0x2705)
#define UART_MSR        (*(XBYTE *)0x2706)
#define UART_SCR        (*(XBYTE *)0x2707)
#define UART_THR        (*(XBYTE *)0x2700)
#define UART_FCR        (*(XBYTE *)0x2702)
#define UART_ECSPMR     (*(XBYTE *)0x2708)

/* Spec.7.13.4 8-bit Timer (TMR)*/
#define PRSC            (*(XBYTE *)0x2900)
#define GCSMS           (*(XBYTE *)0x2901)
#define CTR_A0          (*(XBYTE *)0x2902)
#define CTR_A1          (*(XBYTE *)0x2903)
#define CTR_B0          (*(XBYTE *)0x2904)
#define CTR_B1          (*(XBYTE *)0x2905)
#define DCR_A0          (*(XBYTE *)0x2906)
#define DCR_A1          (*(XBYTE *)0x2907)
#define DCR_B0          (*(XBYTE *)0x2908)
#define DCR_B1          (*(XBYTE *)0x2909)
#define CCGSR           (*(XBYTE *)0x290A)
#define TMRCE           (*(XBYTE *)0x290B)
#define TMRIE           (*(XBYTE *)0x290C)

/* Spec.7.8.4 Platform Environment Control Interface (PECI)*/
#define HOSTAR          (*(XBYTE *)0x3000)
#define BUSERR              BIT(6)  // PECI Bus Abnormal/Contention Error
#define EXTERR              BIT(5)  // PECI Slave Message Phase t-bit Extend over Error
#define WR_FCS_ERR          BIT(3)  // Write_FCS Error
#define RD_FCS_ERR          BIT(2)  // Read_FCS Error
#define FINISH              BIT(1)  // Finish
#define HOBY                BIT(0)  // Host Busy

#define HOCTLR          (*(XBYTE *)0x3001)
#define FIFOCLR             BIT(5)  // Data FIFO Pointer Clear
#define FCSERR_ABT          BIT(4)  // PECI Host Auto-abort at FCS_Error
#define PECIHEN             BIT(3)  // PECI Host Enable
#define CONCTRL             BIT(2)  // PECI Contention Control
#define AWFCS_EN            BIT(1)  // Assured Write FCS Enable
#define START               BIT(0)  // Start

#define HOCMDR          (*(XBYTE *)0x3002)
#define HOTRADDR        (*(XBYTE *)0x3003)
#define HOWRLR          (*(XBYTE *)0x3004)
#define HORDLR          (*(XBYTE *)0x3005)
#define HOWRDR          (*(XBYTE *)0x3006)
#define HORDDR          (*(XBYTE *)0x3007)


/*****************************************************************************/
// END DEFINITION
/*****************************************************************************/
