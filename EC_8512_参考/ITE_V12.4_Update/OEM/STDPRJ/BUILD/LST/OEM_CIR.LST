C51 COMPILER V7.06   OEM_CIR                                                               07/06/2010 09:59:46 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE OEM_CIR
OBJECT MODULE PLACED IN SOURCE\OEM_CIR.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe SOURCE\OEM_CIR.C LA WL(1) CD OT(8,SIZE) OR

stmt level    source

   1          /*-----------------------------------------------------------------------------
   2           * Filename: OEM_CIR.C
   3           * Function: OEM CIR HANDLE
   4           *
   5           * Copyright (c) 2006-2009, ITE Tech. Inc. All Rights Reserved.
   6           *---------------------------------------------------------------------------*/
   7          #include "CORE_INCLUDE.H"
   8          #include "OEM_INCLUDE.H"
   9          
  10          #if SUPPORT_CIR_DEVICE
              #define CIRCompareOffset        7
              
              const BYTE code RC6PowerKey[]={ 0x95,0x55,0xA5,0xF5 };  // RC6 power key
              
              //----------------------------------------------------------------------------
              // The function of CIR wake up system 
              //----------------------------------------------------------------------------
              void Hook_CIRWakeUp(void)
              {
                  BYTE index;
                  BYTE cirdata;
                      if(IsFlag1(POWER_FLAG1,enter_S3)||IsFlag0(POWER_FLAG1,system_on))
                      {
                              CLEAR_MASK(C0SCK, BIT0);                // CIR unselect slow clock
                              for(index=0x00;index<CIRCompareOffset;index++)
                              {
                                      cirdata=C0DR;
                                      _nop_();
                              }
              
                              for(index=0x00;index<sizeof(RC6PowerKey);index++)
                              {
                                      cirdata=C0DR;
                                      if(cirdata != RC6PowerKey[index])
                                      {
                                              ClearCIR();
                                              return;
                                      }
                              }
                      
                              if(IsFlag1(POWER_FLAG1,enter_S3))
                              {
                                      CIRS3WakeUp();
                              }
                              else
                              {
                                      CIRS4S5WakeUp();
                              }
                      }
              }
              
              //----------------------------------------------------------------------------
              // The function of CIR S4/S5 wake up system 
              //----------------------------------------------------------------------------
              void CIRS4S5WakeUp(void)
C51 COMPILER V7.06   OEM_CIR                                                               07/06/2010 09:59:46 PAGE 2   

              {
                      //Oem_TriggerS5S0();
                      SET_MASK(C0MSTCR, BIT0);                //CIR Reset
              }
              
              //----------------------------------------------------------------------------
              // The function of CIR S3 wake up system 
              //----------------------------------------------------------------------------
              void CIRS3WakeUp(void)
              {
                      //Oem_TriggerS3S0();
                      SET_MASK(C0MSTCR, BIT0);                //CIR Reset
              }
              #endif
  70          
  71          //----------------------------------------------------------------------------
  72          // The function of CIR Initialization
  73          //----------------------------------------------------------------------------
  74          void Init_CIR(void)
  75          {       
  76   1              GPCRC0 = 0X00;                          // CIR RX (8512 only) Set GPIO to ALT function.
  77   1              CLEAR_MASK(C0RCR, BIT7);        // RX Disable                   
  78   1              C0BDHR = 0x00;                          // BaudRate 
  79   1              C0BDLR = 0x33;
  80   1              C0MSTCR = 0x08;                         // FIFO Threshold = 17 Bytes
  81   1              C0CFR = 0x0B;                           // Carrier Freqency = 38KHz     
  82   1      
  83   1              bConfirmCirRIM();                       // Write receiver enter an inactive mode
  84   1              bClearCirFIFO();                        // Clear FIFO
  85   1      
  86   1              C0IER = 0x82;                           // CIR Interrupt Enable
  87   1                                                                      // CIR receive available interrupt   
  88   1              SET_MASK(IELMR1, BIT7);         // CIR Interrupt must use Edge-Trig
  89   1              SET_MASK(IER1, BIT7);           // Enable INT15 CIR Interrupt
  90   1              SET_MASK(ISR1, BIT7);           // Clear INT15 pending Status
  91   1              SET_MASK(C0RCR, BIT7);          // RX enable         
  92   1      }
  93          
  94          //----------------------------------------------------------------------------
  95          // The function of CIR module reset
  96          //----------------------------------------------------------------------------
  97          void Reset_CIR(void)
  98          {
  99   1              SET_MASK(RSTC2, BIT1);          // Reset CIR module
 100   1              CLEAR_MASK(IER1, BIT7);         // Disable INT15 CIR Interrupt
 101   1              SET_MASK(ISR1, BIT7);           // Clear INT15 pending Status                
 102   1      }
 103          
 104          //----------------------------------------------------------------------------
 105          // The function of clearing CIR FIFO
 106          //----------------------------------------------------------------------------
 107          void bClearCirFIFO(void)
 108          {
 109   1              SET_MASK(C0MSTCR, BIT1);                        // Write 1 for Clearing FIFO data
 110   1              _nop_();
 111   1              while(IsFlag1(C0MSTCR, BIT1))       // Wait FIFO Clear Done
 112   1              {
 113   2                      ;                                       
 114   2              }
 115   1      }
 116          
 117          //----------------------------------------------------------------------------
C51 COMPILER V7.06   OEM_CIR                                                               07/06/2010 09:59:46 PAGE 3   

 118          // The function of confirming CIR receiver inactive mode
 119          //----------------------------------------------------------------------------
 120          void bConfirmCirRIM(void)
 121          {
 122   1              SET_MASK(C0RCR, BIT3);          // Write 1 for clearing Receive Active
 123   1              _nop_();
 124   1              while(IsFlag1(C0RCR, BIT3))     // Wait CIR receiver enter an inactive mode
 125   1              {
 126   2                      ;                                       
 127   2              }
 128   1      }
 129          
 130          //----------------------------------------------------------------------------
 131          // The function of clearing CIR
 132          //----------------------------------------------------------------------------
 133          void ClearCIR(void) 
 134          {
 135   1              CLEAR_MASK(C0RCR, BIT7);    // RX Disable   
 136   1              bConfirmCirRIM();                       // Write receiver enter an inactive mode
 137   1              bClearCirFIFO();                        // Clear FIFO
 138   1              SET_MASK(C0RCR, BIT7);          // RX enable 
 139   1      } 
 140          
 141          //----------------------------------------------------------------------------
 142          // The function of CIR Interrupt service routine
 143          //----------------------------------------------------------------------------
 144          void Service_CIR(void)
 145          {
 146   1          #if SUPPORT_CIR_DEVICE
                  Hook_CIRWakeUp();
                  #endif
 149   1      }
 150          
 151          //=============================================================================
 152          
C51 COMPILER V7.06   OEM_CIR                                                               07/06/2010 09:59:46 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Init_CIR (BEGIN)
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0000 901620            MOV     DPTR,#01620H
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 77
0005 902305            MOV     DPTR,#02305H
0008 E0                MOVX    A,@DPTR
0009 547F              ANL     A,#07FH
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 78
000C 902309            MOV     DPTR,#02309H
000F E4                CLR     A
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
0011 902308            MOV     DPTR,#02308H
0014 7433              MOV     A,#033H
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 80
0017 902301            MOV     DPTR,#02301H
001A 7408              MOV     A,#08H
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 81
001D 902304            MOV     DPTR,#02304H
0020 740B              MOV     A,#0BH
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
0023 120000      R     LCALL   bConfirmCirRIM
                                           ; SOURCE LINE # 84
0026 120000      R     LCALL   bClearCirFIFO
                                           ; SOURCE LINE # 86
0029 902302            MOV     DPTR,#02302H
002C 7482              MOV     A,#082H
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 88
002F 901109            MOV     DPTR,#01109H
0032 E0                MOVX    A,@DPTR
0033 4480              ORL     A,#080H
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 89
0036 901105            MOV     DPTR,#01105H
0039 E0                MOVX    A,@DPTR
003A 4480              ORL     A,#080H
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
003D 901101            MOV     DPTR,#01101H
0040 E0                MOVX    A,@DPTR
0041 4480              ORL     A,#080H
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 91
0044 902305            MOV     DPTR,#02305H
0047 E0                MOVX    A,@DPTR
0048 4480              ORL     A,#080H
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 92
004B 22                RET     
             ; FUNCTION Init_CIR (END)
C51 COMPILER V7.06   OEM_CIR                                                               07/06/2010 09:59:46 PAGE 5   


             ; FUNCTION Reset_CIR (BEGIN)
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
                                           ; SOURCE LINE # 99
0000 902008            MOV     DPTR,#02008H
0003 E0                MOVX    A,@DPTR
0004 4402              ORL     A,#02H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 100
0007 901105            MOV     DPTR,#01105H
000A E0                MOVX    A,@DPTR
000B 547F              ANL     A,#07FH
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
000E 901101            MOV     DPTR,#01101H
0011 E0                MOVX    A,@DPTR
0012 4480              ORL     A,#080H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 102
0015 22                RET     
             ; FUNCTION Reset_CIR (END)

             ; FUNCTION bClearCirFIFO (BEGIN)
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0000 902301            MOV     DPTR,#02301H
0003 E0                MOVX    A,@DPTR
0004 4402              ORL     A,#02H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 110
0007 00                NOP     
0008         ?C0003:
                                           ; SOURCE LINE # 111
0008 902301            MOV     DPTR,#02301H
000B E0                MOVX    A,@DPTR
000C 20E1F9            JB      ACC.1,?C0003
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
000F         ?C0005:
000F 22                RET     
             ; FUNCTION bClearCirFIFO (END)

             ; FUNCTION bConfirmCirRIM (BEGIN)
                                           ; SOURCE LINE # 120
                                           ; SOURCE LINE # 121
                                           ; SOURCE LINE # 122
0000 902305            MOV     DPTR,#02305H
0003 E0                MOVX    A,@DPTR
0004 4408              ORL     A,#08H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 123
0007 00                NOP     
0008         ?C0006:
                                           ; SOURCE LINE # 124
0008 902305            MOV     DPTR,#02305H
000B E0                MOVX    A,@DPTR
000C 20E3F9            JB      ACC.3,?C0006
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 127
C51 COMPILER V7.06   OEM_CIR                                                               07/06/2010 09:59:46 PAGE 6   

                                           ; SOURCE LINE # 128
000F         ?C0008:
000F 22                RET     
             ; FUNCTION bConfirmCirRIM (END)

             ; FUNCTION ClearCIR (BEGIN)
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
0000 902305            MOV     DPTR,#02305H
0003 E0                MOVX    A,@DPTR
0004 547F              ANL     A,#07FH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 136
0007 120000      R     LCALL   bConfirmCirRIM
                                           ; SOURCE LINE # 137
000A 120000      R     LCALL   bClearCirFIFO
                                           ; SOURCE LINE # 138
000D 902305            MOV     DPTR,#02305H
0010 E0                MOVX    A,@DPTR
0011 4480              ORL     A,#080H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
0014 22                RET     
             ; FUNCTION ClearCIR (END)

             ; FUNCTION Service_CIR (BEGIN)
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 149
0000 22                RET     
             ; FUNCTION Service_CIR (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    152    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
