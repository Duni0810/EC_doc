C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE OEM_KBMATRIX
OBJECT MODULE PLACED IN SOURCE\OEM_KBMATRIX.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe SOURCE\OEM_KBMATRIX.C LA WL(1) CD OT(8,SIZE) OR

stmt level    source

   1          /*-----------------------------------------------------------------------------
   2           * Filename: OEM_KBMATRIX.C
   3           * Function: 1.Keyboard Matrix RC Table(s) for Scan Matix.
   4           *           2.Overlay/ExtKey/Numpad table..
   5           *           3.Function Hot-key handle.
   6           *
   7           * Copyright (c) 2006-2009, ITE Tech. Inc. All Rights Reserved.
   8           *---------------------------------------------------------------------------*/
   9          #include "CORE_INCLUDE.H"
  10          #include "OEM_INCLUDE.H"
  11          
  12          /*-----------------------------------------------------------------------------
  13           * Local Parameter Definition
  14           *---------------------------------------------------------------------------*/
  15          //#define   XXX     X
  16          
  17          /*
  18          ;--------------------------------------------------------------------------------------------------
  19          // Keyboard Printing Example
  20          // .----..----..----..----..----..----..----..----..----..----..----..----..----..----..----..----.
  21          // |ESC || F1 || F2 || F3 || F4 || F5 || F6 || F7 || F8 || F9 || F10||F11 || |  ||  - || Ins|| Del|
  22          // |    ||    ||    ||    ||    ||    ||    ||    ||    ||BrDn||BrUp|| F12|| \  ||  _ ||    ||    |
  23          // '----''----''----''----''----''----''----''----''----''----''----''----''----''----''----''----'
  24          // .------..------..------..------..------..------..------..------..------..------..------..------.
  25          // |  1"  ||  2@  ||  3#  ||  4$  ||  5%  ||  6^  ||  7&  ||  8*  ||  9(  ||  0)  ||  }]  || Back |
  26          // '------''------''------''------''------''------''------''------''------''------''------''------'
  27          // .---..------..------..------..------..------..------..------..------..-----..-----..----..-----.
  28          // |Tab||  Q   ||  W   ||  E   ||  R   ||  T   ||  Y   ||  U   ||  I   ||  O  ||  P  || {[ ||     |
  29          // '---''------''------''------''------''------''------''------''------''-----''-----''----'|     |
  30          // .----..------..------..------..------..------..-----..-----..-----..-----..-----..-------+     |
  31          // |Cpas||  A   ||  S   ||  D   ||  F   ||  G   ||  H  ||  J  ||  K  ||  L  ||  ;  ||    Enter    |
  32          // '----''------''------''------''------''------''-----''-----''-----''-----''-----''-------------'
  33          // .------..------..------..------..------..------..------..------..----..----..----..-----..-----.
  34          // |Shift ||  Z   ||  X   ||  C   ||  V   ||  B   ||  N   ||  M   || ,< || .> || /? || Up  ||Shift|
  35          // |      ||      ||      ||      ||      ||      ||      ||      ||    ||    ||    ||PgUp ||     |
  36          // '------''------''------''------''------''------''------''------''----''----''----''-----''-----'
  37          // .----..----..----..----..----..-------------------------..----..----..----..-----..-----..-----.
  38          // | Fn ||Ctrl|| Win|| `~ || Alt||  SPACE                  || Alt|| =+ || "' || <-  || Down|| ->  |
  39          // |    ||    ||    ||    ||    ||                         ||    ||    ||    ||Home || PgDn|| End |
  40          // '----''----''----''----''----''-------------------------''----''----''----''-----''-----''-----'
  41          */
  42          //-------------------------------------------------------------------------------------------------
  43          const unsigned char code Rc_ROM_Tables[] =
  44          {
  45              // Scanner Table 1  - 16 x 8 Scan Table
  46              //00   01   02   03   04   05   06   07   08   09   10   11   12   13   14   15
  47              0xAD,0xAE,0xB2,0xB3,0x9C,0x00,0x00,0x00,0xB4,0x00,0x00,0x00,0xE4,0xB5,0xB8,0xE1, // 00
  48              0x0D,0x26,0x25,0x2B,0x33,0x00,0x00,0x00,0xA1,0x00,0x00,0x00,0x9D,0x9E,0x4E,0x55, // 01
  49              0x58,0x1D,0x24,0x61,0x32,0x00,0x00,0x00,0xA2,0x00,0x00,0x00,0xA3,0x9F,0x94,0x66, // 02
  50              0x16,0x1E,0x2D,0x21,0x2A,0x00,0x00,0x00,0xA5,0x00,0x00,0x00,0x9B,0x95,0x5B,0x5D, // 03
  51              0xA8,0x15,0x23,0x22,0x31,0x00,0x00,0x00,0xA6,0x00,0x00,0x00,0xA7,0x54,0xAB,0x98, // 04
  52              0x8E,0x1C,0x1B,0x1A,0x29,0x00,0x00,0x00,0xA4,0x84,0x00,0x00,0xAA,0x52,0xA0,0x99, // 05
  53              0x0E,0xAF,0x2E,0x2C,0x34,0x00,0x82,0x8A,0xA9,0x00,0x8C,0x88,0x9A,0x97,0x96,0x00, // 06
  54              0x76,0xB0,0xB1,0x36,0x35,0x00,0x00,0x8B,0x41,0x00,0x8D,0x89,0xE5,0xB6,0xB7,0x91  // 07
  55          };
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 2   

  56          //-------------------------------------------------------------------------------------------------
  57          const unsigned char code EtKey_ROM_Tables[] =
  58          {
  59              //16   17   18  Extended - 19X8 Scan Table
  60              0x33,0x69,0x70,     // 00
  61              0x35,0xE3,0x79,     // 01
  62              0x3C,0x6B,0x7A,     // 02
  63              0x36,0x7C,0x81,     // 03
  64              0x3B,0x6C,0x7D,     // 04
  65              0x3D,0x75,0x7B,     // 05
  66              0x3A,0x73,0x74,     // 06
  67              0x31,0x72,0x71,     // 07
  68          
  69          };
  70          //-----------------------------------------------------------------------------
  71          //   Key 0[45h] //  Key P[4Dh] //  Key:;[4Ch] // Key ?/[4Ah]
  72          //Numpad *[B3h]//Numpad -[B7h]//Numpad +[BBh]//Numpad /[BEh]
  73          #if NUMPAD_MATH_USE_OEM
  74          const BYTE code ss2_9F[] ={  0x45,  0xB3,  0xB3,  0xB3  };  //[0 ]<->[*]
  75          const BYTE code ss2_A3[] ={  0x4D,  0xB7,  0xB7,  0xB7  };  //[P ]<->[-]
  76          const BYTE code ss2_A7[] ={  0x4C,  0xBB,  0xBB,  0xBB  };  //[:;]<->[+]
  77          const BYTE code ss2_AA[] ={  0x4A,  0xBE,  0xBE,  0xBE  };  //[?/]<->[/]
  78          #endif
  79          //-----------------------------------------------------------------------------
  80          #if NUMPAD_USE_OEM
              //Copy from CORE_XLT.C if Oem special request.
              const BYTE code ss2_9C[] ={  0x3D,  0x3D,  0x3D,  0xB0  };  //[7 ]<->[7 ]
              const BYTE code ss2_9D[] ={  0x3E,  0x3E,  0x3E,  0xB1  };  //[8 ]<->[8 ]
              const BYTE code ss2_9E[] ={  0x46,  0x46,  0x46,  0xB2  };  //[9 ]<->[9 ]
              
              const BYTE code ss2_A0[] ={  0x3C,  0x3C,  0x3C,  0xB4  };  //[U ]<->[4 ]
              const BYTE code ss2_A1[] ={  0x43,  0x43,  0x43,  0xB5  };  //[I ]<->[5 ]
              const BYTE code ss2_A2[] ={  0x44,  0x44,  0x44,  0xB6  };  //[O ]<->[6 ]
              
              const BYTE code ss2_A4[] ={  0x3B,  0x3B,  0x3B,  0xB8  };  //[J ]<->[1 ]
              const BYTE code ss2_A5[] ={  0x42,  0x42,  0x42,  0xB9  };  //[K ]<->[2 ]
              const BYTE code ss2_A6[] ={  0x4B,  0x4B,  0x4B,  0xBA  };  //[L ]<->[3 ]
              
              const BYTE code ss2_A8[] ={  0x3A,  0x3A,  0x3A,  0xBC  };  //[M ]<->[0 ]
              const BYTE code ss2_A9[] ={  0x49,  0x49,  0x49,  0xBD  };  //[>/]<->[. ]
              #endif
  97          //-----------------------------------------------------------------------------
  98          
  99          /* ----------------------------------------------------------------------------
 100           * FUNCTION: sskey2_overlay_table
 101           * ------------------------------------------------------------------------- */
 102          const BYTE code sskey2_overlay_table[] =
 103          {               //  Index   Normal      <-> [Fn]
 104              0x94, 0x95, //  0Fh     Home        <-> End             // 0xE0
 105              0x77, 0x7E, //  10h     Num Lk      <-> Scr LK          // 0xE1
 106              0x98, 0x96, //  11h     Up          <-> PageUp          // 0xE2
 107              0x99, 0x97, //  12h     Down        <-> PageDn          // 0xE3
 108              0x9A, 0x94, //  13h     Left        <-> Home            // 0xE4
 109              0x9B, 0x95, //  14h     Right       <-> End             // 0xE5
 110              0xC3, 0xC3, //  15h     Insert      <-> PrsSc           // 0xE6
 111              0x07, 0x91, //  16h     Delete      <-> Sys Rq          // 0xE7
 112              0x96, 0xA1, //  17h     PageUp      <-> Vol Up          // 0xE8
 113              0x97, 0xA2, //  18h     PageDown    <-> Vol Down        // 0xE9
 114              0x95, 0xA0, //  19h     End         <-> Mute            // 0xEA
 115              0xC3, 0xC1, //  0Bh     PrtSC       <-> SysRq           // 0xEB
 116              0x00, 0x00, //  0Ch     --------    <-> --------        // 0xEC
 117              0x00, 0x00, //  0Dh     --------    <-> --------        // 0xED
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 3   

 118              0x00, 0x00, //  0Eh     --------    <-> --------        // 0xEE
 119              0x00, 0x00, //  0Fh     --------    <-> --------        // 0xEF
 120              0x00, 0x00, //  10h     --------    <-> --------        // 0xF0
 121              0x00, 0x00, //  11h     --------    <-> --------        // 0xF1
 122              0x00, 0x00, //  12h     --------    <-> --------        // 0xF2
 123              0x00, 0x00, //  13h     --------    <-> --------        // 0xF3
 124              0x00, 0x00, //  14h     --------    <-> --------        // 0xF4
 125              0x00, 0x00, //  15h     --------    <-> --------        // 0xF5
 126              0x00, 0x00, //  16h     --------    <-> --------        // 0xF6
 127              0x00, 0x00, //  17h     --------    <-> --------        // 0xF7
 128              0x00, 0x00, //  18h     --------    <-> --------        // 0xF8
 129              0x00, 0x00, //  19h     --------    <-> --------        // 0xF9
 130              0x00, 0x00, //  1Ah     --------    <-> --------        // 0xFA
 131              0x00, 0x00, //  1Bh     --------    <-> --------        // 0xFB
 132              0x00, 0x00, //  1Ch     --------    <-> --------        // 0xFC
 133              0x00, 0x00, //  1Dh     --------    <-> --------        // 0xFD
 134              0x00, 0x00, //  1Eh     --------    <-> --------        // 0xFE
 135              0x00, 0x00, //  1Fh     --------    <-> --------        // 0xFF
 136          
 137          };
 138          //-----------------------------------------------------------------------------
 139          
 140          //-----------------------------------------------------------------------------
 141          // Function Key F1 ~ F12 + 2 ExtKey
 142          //-----------------------------------------------------------------------------
 143          // RC = 0xAC ~ 0xBF           Normal  Fn
 144          const BYTE code ss2_AC[] = {  0x00,  0x00  };
 145          const BYTE code ss2_AD[] = {  0x05,  0xD0  };  //  F1<-> HotKey_Fn_F1
 146          const BYTE code ss2_AE[] = {  0x06,  0xD1  };  //  F2<-> HotKey_Fn_F2
 147          const BYTE code ss2_AF[] = {  0x04,  0xD2  };  //  F3<-> HotKey_Fn_F3
 148          const BYTE code ss2_B0[] = {  0x0C,  0xD3  };  //  F4<-> HotKey_Fn_F4
 149          const BYTE code ss2_B1[] = {  0x03,  0xD4  };  //  F5<-> HotKey_Fn_F5
 150          const BYTE code ss2_B2[] = {  0x0B,  0xD5  };  //  F6<-> HotKey_Fn_F6
 151          const BYTE code ss2_B3[] = {  0x80,  0xA0  };  //  F7<-> Mute event
 152          const BYTE code ss2_B4[] = {  0x0A,  0xA2  };  //  F8<-> Volume Down event
 153          const BYTE code ss2_B5[] = {  0x01,  0xA1  };  //  F9<-> Volume Up event
 154          const BYTE code ss2_B6[] = {  0x09,  0xAE  };  // F10<-> HotKey_Fn_F10
 155          const BYTE code ss2_B7[] = {  0x78,  0x78  };  // F11<-> HotKey_Fn_F11
 156          const BYTE code ss2_B8[] = {  0x07,  0x91, };  // F12<-> HotKey_Fn_F12
 157          const BYTE code ss2_B9[] = {  0x98,  0xDC  };
 158          const BYTE code ss2_BA[] = {  0x99,  0xDD  };
 159          const BYTE code ss2_BB[] = {  0x22,  0xC4  };
 160          const BYTE code ss2_BC[] = {  0x76,  0xDE  };
 161          const BYTE code ss2_BD[] = {  0x9B,  0xDF  };
 162          const BYTE code ss2_BE[] = {  0x23,  0xD8  };
 163          const BYTE code ss2_BF[] = {  0x82,  0x83  };
 164          
 165          const BYTE code ss2_C0[] = {  0xC0,  0xC0  };   // Delete <-> Delete
 166          const BYTE code ss2_C1[] = {  0xC1,  0xC1  };   // SysRq  <-> SysRq
 167          const BYTE code ss2_C2[] = {  0xC2,  0xC2  };   // Insert <-> Insert
 168          const BYTE code ss2_C3[] = {  0xC3,  0xC3  };   // PrintScreen <-> PrintScreen
 169          const BYTE code ss2_C4[] = {  0xC4,  0xC4  };   //
 170          const BYTE code ss2_C5[] = {  0xC5,  0xC5  };   //
 171          const BYTE code ss2_C6[] = {  0xC6,  0xC6  };   //
 172          const BYTE code ss2_C7[] = {  0xC7,  0xC7  };   //
 173          const BYTE code ss2_C8[] = {  0xC8,  0xC8  };   //
 174          const BYTE code ss2_C9[] = {  0xC9,  0xC9  };   //
 175          const BYTE code ss2_CA[] = {  0xCA,  0xCA  };   //
 176          const BYTE code ss2_CB[] = {  0xCB,  0xCB  };   //
 177          const BYTE code ss2_CC[] = {  0xCC,  0xCC  };   //
 178          const BYTE code ss2_CD[] = {  0xCD,  0xCD  };   //
 179          const BYTE code ss2_CE[] = {  0xCE,  0xCE  };   //
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 4   

 180          const BYTE code ss2_CF[] = {  0xCF,  0xCF  };   //
 181          
 182          //-----------------------------------------------------------------------------
 183          const FUNCT_PTR_V_B code HotKey_Fn_Fx[] =
 184          {
 185              HotKey_Fn_F1,       // Fn + F1
 186              HotKey_Fn_F2,       // Fn + F2
 187              HotKey_Fn_F3,       // Fn + F3
 188              HotKey_Fn_F4,       // Fn + F4
 189              HotKey_Fn_F5,       // Fn + F5
 190              HotKey_Fn_F6,       // Fn + F6
 191              HotKey_Fn_F7,       // Fn + F7
 192              HotKey_Fn_F8,       // Fn + F8
 193              HotKey_Fn_F9,       // Fn + F9
 194              HotKey_Fn_F10,      // Fn + F10
 195              HotKey_Fn_F11,      // Fn + F11
 196              HotKey_Fn_F12,      // Fn + F12
 197              HotKey_Fn_DCH,      // Fn + Key
 198              HotKey_Fn_DDH,      // Fn + Key
 199              HotKey_Fn_DEH,      // Fn + Key
 200              HotKey_Fn_DFH,      // Fn + Key
 201              HotKey_Fn_E0H,      // Fn + Key[5]          //0xE0
 202              HotKey_Fn_E1H,      // Fn + Key[D]          //0xE1
 203              HotKey_Fn_E2H,      // Fn + Key[E]          //0xE2
 204              HotKey_Fn_E3H,      // Fn + Key[6]          //0xE3
 205              HotKey_Fn_E4H,      // Fn + Key[ ]          //0xE4
 206              HotKey_Fn_E5H,      // Fn + Key[ ]          //0xE5
 207              HotKey_Fn_E6H,      // Fn + Key[ ]          //0xE6
 208              HotKey_Fn_E7H,      // Fn + Key[ ]          //0xE7
 209              HotKey_Fn_E8H,      // Fn + Key[ ]          //0xE8
 210              HotKey_Fn_E9H,      // Fn + Key[ ]          //0xE9
 211              HotKey_Fn_EAH,      // Fn + Key[ ]          //0xEA
 212              HotKey_Fn_EBH,      // Fn + Key[ ]          //0xEB
 213              HotKey_Fn_ECH,      // Fn + Key[ ]          //0xEC
 214              HotKey_Fn_EDH,      // Fn + Key[ ]          //0xED
 215              HotKey_Fn_EEH,      // Fn + Key[ ]          //0xEE
 216              HotKey_Fn_EFH,      // Fn + Key[ ]          //0xEF
 217          
 218          };
 219          //-----------------------------------------------------------------------------
 220          // The function of hotkey NULL
 221          //-----------------------------------------------------------------------------
 222          void HotKey_NULL(BYTE event)
 223          {
 224   1          ;
 225   1      }
 226          //-----------------------------------------------------------------------------
 227          // The function of hotkey Fn + Fx
 228          //-----------------------------------------------------------------------------
 229          void costomer_function(BYTE code_byte, BYTE event)
 230          {
 231   1          (HotKey_Fn_Fx[code_byte])(event);
 232   1      }
 233          
 234          /* ----------------------------------------------------------------------------
 235           * FUNCTION: Customer Fn + Hotkey Function
 236           *
 237           * Input: code
 238           *        event = Contact event (MAKE_EVENT, BREAK_EVENT, or REPEAT_EVENT)
 239           * ------------------------------------------------------------------------- */
 240          //-----------------------------------------------------------------------------
 241          // The function of hotkey Fn + F1
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 5   

 242          //-----------------------------------------------------------------------------
 243          void HotKey_Fn_F1(BYTE event)
 244          {
 245   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 246   1          if ( event == MAKE_EVENT )
 247   1          {
 248   2              WriteSCI_QueryValue(_SCIEVT_FnF1);
 249   2          }
 250   1      }
 251          
 252          //-----------------------------------------------------------------------------
 253          // The function of hotkey Fn + F2
 254          //-----------------------------------------------------------------------------
 255          void HotKey_Fn_F2(BYTE event)
 256          {
 257   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 258   1          if ( event == MAKE_EVENT )
 259   1          {
 260   2              WAIT_SCI_CENTER = 0;
 261   2              //WriteSCI_QueryValue(_SCIEVT_FnF2);
 262   2              WriteSCI_QueryValue(_SCIEVT_SLEEP);
 263   2          }
 264   1      }
 265          
 266          //-----------------------------------------------------------------------------
 267          // The function of hotkey Fn + F3
 268          //-----------------------------------------------------------------------------
 269          void HotKey_Fn_F3(BYTE event)
 270          {
 271   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 272   1          if ( event == MAKE_EVENT )
 273   1          {
 274   2              //WriteSCI_QueryValue(_SCIEVT_FnF3);
 275   2              WriteSCI_QueryValue(_SCIEVT_LCD);
 276   2          }
 277   1      }
 278          
 279          //-----------------------------------------------------------------------------
 280          // The function of hotkey Fn + F4
 281          //-----------------------------------------------------------------------------
 282          void HotKey_Fn_F4(BYTE event)
 283          {
 284   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 285   1          if ( event == MAKE_EVENT )
 286   1          {
 287   2              //WriteSCI_QueryValue(_SCIEVT_FnF4);
 288   2              if( DACDAT1 >= 0x10 )   //Brightness
 289   2              {
 290   3                  DACDAT1-=0x10;
 291   3              }
 292   2          }
 293   1      }
 294          
 295          //-----------------------------------------------------------------------------
 296          // The function of hotkey Fn + F5
 297          //-----------------------------------------------------------------------------
 298          void HotKey_Fn_F5(BYTE event)
 299          {
 300   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 301   1          if ( event == MAKE_EVENT )
 302   1          {
 303   2              //WriteSCI_QueryValue(_SCIEVT_FnF5);
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 6   

 304   2              if( DACDAT1 < 0xF0 )    //Brightness
 305   2              {
 306   3                  DACDAT1+=0x10;
 307   3              }
 308   2          }
 309   1      }
 310          
 311          //-----------------------------------------------------------------------------
 312          // The function of hotkey Fn + F6
 313          //-----------------------------------------------------------------------------
 314          void HotKey_Fn_F6(BYTE event)
 315          {
 316   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 317   1          if ( event == MAKE_EVENT )
 318   1          {
 319   2      
 320   2          }
 321   1      }
 322          
 323          //-----------------------------------------------------------------------------
 324          // The function of hotkey Fn + F7
 325          //-----------------------------------------------------------------------------
 326          void HotKey_Fn_F7(BYTE event)
 327          {
 328   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 329   1          if ( event == MAKE_EVENT )
 330   1          {
 331   2              WriteSCI_QueryValue(_SCIEVT_FnF7);
 332   2          }
 333   1      }
 334          
 335          //-----------------------------------------------------------------------------
 336          // The function of hotkey Fn + F8
 337          //-----------------------------------------------------------------------------
 338          void HotKey_Fn_F8(BYTE event)
 339          {
 340   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 341   1          if ( event == MAKE_EVENT )
 342   1          {
 343   2              WAIT_SCI_CENTER = 0;
 344   2              WriteSCI_QueryValue(_SCIEVT_FnF8);
 345   2          }
 346   1      }
 347          
 348          //-----------------------------------------------------------------------------
 349          // The function of hotkey Fn + F9
 350          //-----------------------------------------------------------------------------
 351          void HotKey_Fn_F9(BYTE event)
 352          {
 353   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 354   1          if ( event == MAKE_EVENT )
 355   1          {
 356   2              WAIT_SCI_CENTER = 0;
 357   2              WriteSCI_QueryValue(_SCIEVT_FnF9);
 358   2          }
 359   1      }
 360          
 361          //-----------------------------------------------------------------------------
 362          // The function of hotkey Fn + F10
 363          //-----------------------------------------------------------------------------
 364          void HotKey_Fn_F10(BYTE event)
 365          {
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 7   

 366   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 367   1          if ( event == MAKE_EVENT )
 368   1          {
 369   2              WriteSCI_QueryValue(_SCIEVT_FnF10);
 370   2          }
 371   1      }
 372          
 373          //-----------------------------------------------------------------------------
 374          // The function of hotkey Fn + F11
 375          //-----------------------------------------------------------------------------
 376          void HotKey_Fn_F11(BYTE event)
 377          {
 378   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 379   1          if ( event == MAKE_EVENT )
 380   1          {
 381   2              WriteSCI_QueryValue(_SCIEVT_FnF11);
 382   2          }
 383   1      }
 384          
 385          //-----------------------------------------------------------------------------
 386          // The function of hotkey Fn + F12
 387          //-----------------------------------------------------------------------------
 388          void HotKey_Fn_F12(BYTE event)
 389          {
 390   1          //if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 391   1          if ( event == MAKE_EVENT )
 392   1          {
 393   2              WriteSCI_QueryValue(_SCIEVT_FnF12);
 394   2          }
 395   1      }
 396          
 397          //-----------------------------------------------------------------------------
 398          // The function of hotkey Fn + Key
 399          //-----------------------------------------------------------------------------
 400          void HotKey_Fn_DCH(BYTE event)
 401          {
 402   1          if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 403   1          {
 404   2      
 405   2          }
 406   1      }
 407          
 408          //-----------------------------------------------------------------------------
 409          // The function of hotkey Fn + Key
 410          //-----------------------------------------------------------------------------
 411          void HotKey_Fn_DDH(BYTE event)
 412          {
 413   1          if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 414   1          {
 415   2      
 416   2          }
 417   1      }
 418          
 419          //-----------------------------------------------------------------------------
 420          // The function of hotkey Fn + Key
 421          //-----------------------------------------------------------------------------
 422          void HotKey_Fn_DEH(BYTE event)
 423          {
 424   1          if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 425   1          {
 426   2      
 427   2          }
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 8   

 428   1      }
 429          
 430          //-----------------------------------------------------------------------------
 431          // The function of hotkey Fn + Key
 432          //-----------------------------------------------------------------------------
 433          void HotKey_Fn_DFH(BYTE event)
 434          {
 435   1          if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 436   1          {
 437   2      
 438   2          }
 439   1      }
 440          
 441          //-----------------------------------------------------------------------------
 442          // The function of hotkey Fn + Key
 443          //-----------------------------------------------------------------------------
 444          void HotKey_Fn_E0H(BYTE event)
 445          {
 446   1      //
 447   1      }
 448          
 449          //-----------------------------------------------------------------------------
 450          // The function of hotkey Fn + Key
 451          //-----------------------------------------------------------------------------
 452          void HotKey_Fn_E1H(BYTE event)
 453          {
 454   1      }
 455          
 456          //-----------------------------------------------------------------------------
 457          // The function of hotkey Fn + Key
 458          //-----------------------------------------------------------------------------
 459          void HotKey_Fn_E2H(BYTE event)
 460          {
 461   1      }
 462          
 463          //-----------------------------------------------------------------------------
 464          // The function of hotkey Fn + Key
 465          //-----------------------------------------------------------------------------
 466          void HotKey_Fn_E3H(BYTE event)
 467          {
 468   1      
 469   1      }
 470          
 471          //-----------------------------------------------------------------------------
 472          // The function of hotkey Fn + Key
 473          //-----------------------------------------------------------------------------
 474          void HotKey_Fn_E4H(BYTE event)
 475          {
 476   1      
 477   1      }
 478          //-----------------------------------------------------------------------------
 479          // The function of hotkey Fn + Key
 480          //-----------------------------------------------------------------------------
 481          void HotKey_Fn_E5H(BYTE event)
 482          {
 483   1      
 484   1      }
 485          //-----------------------------------------------------------------------------
 486          // The function of hotkey Fn + Key
 487          //-----------------------------------------------------------------------------
 488          void HotKey_Fn_E6H(BYTE event)
 489          {
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 9   

 490   1      
 491   1      }
 492          //-----------------------------------------------------------------------------
 493          // The function of hotkey Fn + Key
 494          //-----------------------------------------------------------------------------
 495          void HotKey_Fn_E7H(BYTE event)
 496          {
 497   1      
 498   1      }
 499          //-----------------------------------------------------------------------------
 500          void HotKey_Fn_E8H(BYTE event)
 501          {
 502   1      
 503   1      }
 504          //-----------------------------------------------------------------------------
 505          void HotKey_Fn_E9H(BYTE event)
 506          {
 507   1      
 508   1      }
 509          //-----------------------------------------------------------------------------
 510          void HotKey_Fn_EAH(BYTE event)
 511          {
 512   1      
 513   1      }
 514          //-----------------------------------------------------------------------------
 515          void HotKey_Fn_EBH(BYTE event)
 516          {
 517   1      
 518   1      }
 519          //-----------------------------------------------------------------------------
 520          void HotKey_Fn_ECH(BYTE event)
 521          {
 522   1      
 523   1      }
 524          //-----------------------------------------------------------------------------
 525          void HotKey_Fn_EDH(BYTE event)
 526          {
 527   1          //TEST INVERSE_REG(UtilityFlag,2);
 528   1      }
 529          //-----------------------------------------------------------------------------
 530          void HotKey_Fn_EEH(BYTE event)
 531          {
 532   1           //TEST INVERSE_REG(UtilityFlag,1);
 533   1      }
 534          //-----------------------------------------------------------------------------
 535          void HotKey_Fn_EFH(BYTE event)
 536          {
 537   1           //TEST INVERSE_REG(UtilityFlag,0);
 538   1      }
 539          //-----------------------------------------------------------------------------
 540          
 541          //-----------------------------------------------------------------------------
 542          // Oem_ScanActivity Hook
 543          //-----------------------------------------------------------------------------
 544          void Oem_ScanActivity(void)
 545          {
 546   1          if( !CORE_PMFLAG_S3 )   return;
 547   1      
 548   1          if( STATE_PM_SLPS3() )  return;
 549   1      
 550   1          PM_PWRBTN_LO();
 551   1          vDelay1MS(80);
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 10  

 552   1          PM_PWRBTN_HI();
 553   1      }
 554          //-----------------------------------------------------------------------------
 555          
 556          /*-----------------------------------------------------------------------------
 557           * End
 558           *---------------------------------------------------------------------------*/
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 11  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _HotKey_NULL (BEGIN)
                                           ; SOURCE LINE # 222
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 225
0005 22                RET     
             ; FUNCTION _HotKey_NULL (END)

             ; FUNCTION _costomer_function (BEGIN)
                                           ; SOURCE LINE # 229
;---- Variable 'event' assigned to Register 'R5' ----
;---- Variable 'code_byte' assigned to Register 'R6' ----
0000 AE07              MOV     R6,AR7
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
0002 AF05              MOV     R7,AR5
0004 EE                MOV     A,R6
0005 75F003            MOV     B,#03H
0008 A4                MUL     AB
0009 2400        R     ADD     A,#LOW HotKey_Fn_Fx
000B F582              MOV     DPL,A
000D E4                CLR     A
000E 3400        R     ADDC    A,#HIGH HotKey_Fn_Fx
0010 F583              MOV     DPH,A
0012 120000      E     LCALL   ?C?PLDCODE
0015 8982              MOV     DPL,R1
0017 8A83              MOV     DPH,R2
0019 020000      E     LJMP    ?C?ICALL2
             ; FUNCTION _costomer_function (END)

             ; FUNCTION _HotKey_Fn_F1 (BEGIN)
                                           ; SOURCE LINE # 243
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 246
0000 EF                MOV     A,R7
0001 7005              JNZ     ?C0004
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
0003 7F0A              MOV     R7,#0AH
0005 120000      E     LCALL   _WriteSCI_QueryValue
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
0008         ?C0004:
0008 22                RET     
             ; FUNCTION _HotKey_Fn_F1 (END)

             ; FUNCTION _HotKey_Fn_F2 (BEGIN)
                                           ; SOURCE LINE # 255
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 258
0000 EF                MOV     A,R7
0001 700B              JNZ     ?C0006
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 260
0003 7800        E     MOV     R0,#LOW CORE_OSFLAG
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 12  

0005 E6                MOV     A,@R0
0006 54BF              ANL     A,#0BFH
0008 F6                MOV     @R0,A
                                           ; SOURCE LINE # 262
0009 7F31              MOV     R7,#031H
000B 120000      E     LCALL   _WriteSCI_QueryValue
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
000E         ?C0006:
000E 22                RET     
             ; FUNCTION _HotKey_Fn_F2 (END)

             ; FUNCTION _HotKey_Fn_F3 (BEGIN)
                                           ; SOURCE LINE # 269
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 270
                                           ; SOURCE LINE # 272
0000 EF                MOV     A,R7
0001 7005              JNZ     ?C0008
                                           ; SOURCE LINE # 273
                                           ; SOURCE LINE # 275
0003 7F32              MOV     R7,#032H
0005 120000      E     LCALL   _WriteSCI_QueryValue
                                           ; SOURCE LINE # 276
                                           ; SOURCE LINE # 277
0008         ?C0008:
0008 22                RET     
             ; FUNCTION _HotKey_Fn_F3 (END)

             ; FUNCTION _HotKey_Fn_F4 (BEGIN)
                                           ; SOURCE LINE # 282
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 285
0000 EF                MOV     A,R7
0001 700D              JNZ     ?C0011
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 288
0003 901A03            MOV     DPTR,#01A03H
0006 E0                MOVX    A,@DPTR
0007 C3                CLR     C
0008 9410              SUBB    A,#010H
000A 4004              JC      ?C0011
                                           ; SOURCE LINE # 289
                                           ; SOURCE LINE # 290
000C E0                MOVX    A,@DPTR
000D 24F0              ADD     A,#0F0H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 292
                                           ; SOURCE LINE # 293
0010         ?C0011:
0010 22                RET     
             ; FUNCTION _HotKey_Fn_F4 (END)

             ; FUNCTION _HotKey_Fn_F5 (BEGIN)
                                           ; SOURCE LINE # 298
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 301
0000 EF                MOV     A,R7
0001 700D              JNZ     ?C0014
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 13  

                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 304
0003 901A03            MOV     DPTR,#01A03H
0006 E0                MOVX    A,@DPTR
0007 C3                CLR     C
0008 94F0              SUBB    A,#0F0H
000A 5004              JNC     ?C0014
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 306
000C E0                MOVX    A,@DPTR
000D 2410              ADD     A,#010H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 307
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 309
0010         ?C0014:
0010 22                RET     
             ; FUNCTION _HotKey_Fn_F5 (END)

             ; FUNCTION _HotKey_Fn_F6 (BEGIN)
                                           ; SOURCE LINE # 314
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 318
                                           ; SOURCE LINE # 320
                                           ; SOURCE LINE # 321
0005         ?C0016:
0005 22                RET     
             ; FUNCTION _HotKey_Fn_F6 (END)

             ; FUNCTION _HotKey_Fn_F7 (BEGIN)
                                           ; SOURCE LINE # 326
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 329
0000 EF                MOV     A,R7
0001 7005              JNZ     ?C0018
                                           ; SOURCE LINE # 330
                                           ; SOURCE LINE # 331
0003 7F10              MOV     R7,#010H
0005 120000      E     LCALL   _WriteSCI_QueryValue
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
0008         ?C0018:
0008 22                RET     
             ; FUNCTION _HotKey_Fn_F7 (END)

             ; FUNCTION _HotKey_Fn_F8 (BEGIN)
                                           ; SOURCE LINE # 338
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 339
                                           ; SOURCE LINE # 341
0000 EF                MOV     A,R7
0001 700B              JNZ     ?C0020
                                           ; SOURCE LINE # 342
                                           ; SOURCE LINE # 343
0003 7800        E     MOV     R0,#LOW CORE_OSFLAG
0005 E6                MOV     A,@R0
0006 54BF              ANL     A,#0BFH
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 14  

0008 F6                MOV     @R0,A
                                           ; SOURCE LINE # 344
0009 7F11              MOV     R7,#011H
000B 120000      E     LCALL   _WriteSCI_QueryValue
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 346
000E         ?C0020:
000E 22                RET     
             ; FUNCTION _HotKey_Fn_F8 (END)

             ; FUNCTION _HotKey_Fn_F9 (BEGIN)
                                           ; SOURCE LINE # 351
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 354
0000 EF                MOV     A,R7
0001 700B              JNZ     ?C0022
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 356
0003 7800        E     MOV     R0,#LOW CORE_OSFLAG
0005 E6                MOV     A,@R0
0006 54BF              ANL     A,#0BFH
0008 F6                MOV     @R0,A
                                           ; SOURCE LINE # 357
0009 7F12              MOV     R7,#012H
000B 120000      E     LCALL   _WriteSCI_QueryValue
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 359
000E         ?C0022:
000E 22                RET     
             ; FUNCTION _HotKey_Fn_F9 (END)

             ; FUNCTION _HotKey_Fn_F10 (BEGIN)
                                           ; SOURCE LINE # 364
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 365
                                           ; SOURCE LINE # 367
0000 EF                MOV     A,R7
0001 7005              JNZ     ?C0024
                                           ; SOURCE LINE # 368
                                           ; SOURCE LINE # 369
0003 7F13              MOV     R7,#013H
0005 120000      E     LCALL   _WriteSCI_QueryValue
                                           ; SOURCE LINE # 370
                                           ; SOURCE LINE # 371
0008         ?C0024:
0008 22                RET     
             ; FUNCTION _HotKey_Fn_F10 (END)

             ; FUNCTION _HotKey_Fn_F11 (BEGIN)
                                           ; SOURCE LINE # 376
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 377
                                           ; SOURCE LINE # 379
0000 EF                MOV     A,R7
0001 7005              JNZ     ?C0026
                                           ; SOURCE LINE # 380
                                           ; SOURCE LINE # 381
0003 7F14              MOV     R7,#014H
0005 120000      E     LCALL   _WriteSCI_QueryValue
                                           ; SOURCE LINE # 382
                                           ; SOURCE LINE # 383
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 15  

0008         ?C0026:
0008 22                RET     
             ; FUNCTION _HotKey_Fn_F11 (END)

             ; FUNCTION _HotKey_Fn_F12 (BEGIN)
                                           ; SOURCE LINE # 388
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 389
                                           ; SOURCE LINE # 391
0000 EF                MOV     A,R7
0001 7005              JNZ     ?C0028
                                           ; SOURCE LINE # 392
                                           ; SOURCE LINE # 393
0003 7F15              MOV     R7,#015H
0005 120000      E     LCALL   _WriteSCI_QueryValue
                                           ; SOURCE LINE # 394
                                           ; SOURCE LINE # 395
0008         ?C0028:
0008 22                RET     
             ; FUNCTION _HotKey_Fn_F12 (END)

             ; FUNCTION _HotKey_Fn_DCH (BEGIN)
                                           ; SOURCE LINE # 400
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 401
                                           ; SOURCE LINE # 402
                                           ; SOURCE LINE # 403
                                           ; SOURCE LINE # 405
                                           ; SOURCE LINE # 406
0005         ?C0031:
0005 22                RET     
             ; FUNCTION _HotKey_Fn_DCH (END)

             ; FUNCTION _HotKey_Fn_DDH (BEGIN)
                                           ; SOURCE LINE # 411
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 412
                                           ; SOURCE LINE # 413
                                           ; SOURCE LINE # 414
                                           ; SOURCE LINE # 416
                                           ; SOURCE LINE # 417
0005         ?C0034:
0005 22                RET     
             ; FUNCTION _HotKey_Fn_DDH (END)

             ; FUNCTION _HotKey_Fn_DEH (BEGIN)
                                           ; SOURCE LINE # 422
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 424
                                           ; SOURCE LINE # 425
                                           ; SOURCE LINE # 427
                                           ; SOURCE LINE # 428
0005         ?C0037:
0005 22                RET     
             ; FUNCTION _HotKey_Fn_DEH (END)
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 16  


             ; FUNCTION _HotKey_Fn_DFH (BEGIN)
                                           ; SOURCE LINE # 433
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 434
                                           ; SOURCE LINE # 435
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 438
                                           ; SOURCE LINE # 439
0005         ?C0040:
0005 22                RET     
             ; FUNCTION _HotKey_Fn_DFH (END)

             ; FUNCTION _HotKey_Fn_E0H (BEGIN)
                                           ; SOURCE LINE # 444
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 445
                                           ; SOURCE LINE # 447
0005 22                RET     
             ; FUNCTION _HotKey_Fn_E0H (END)

             ; FUNCTION _HotKey_Fn_E1H (BEGIN)
                                           ; SOURCE LINE # 452
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 453
                                           ; SOURCE LINE # 454
0005 22                RET     
             ; FUNCTION _HotKey_Fn_E1H (END)

             ; FUNCTION _HotKey_Fn_E2H (BEGIN)
                                           ; SOURCE LINE # 459
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 460
                                           ; SOURCE LINE # 461
0005 22                RET     
             ; FUNCTION _HotKey_Fn_E2H (END)

             ; FUNCTION _HotKey_Fn_E3H (BEGIN)
                                           ; SOURCE LINE # 466
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 467
                                           ; SOURCE LINE # 469
0005 22                RET     
             ; FUNCTION _HotKey_Fn_E3H (END)

             ; FUNCTION _HotKey_Fn_E4H (BEGIN)
                                           ; SOURCE LINE # 474
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 475
                                           ; SOURCE LINE # 477
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 17  

0005 22                RET     
             ; FUNCTION _HotKey_Fn_E4H (END)

             ; FUNCTION _HotKey_Fn_E5H (BEGIN)
                                           ; SOURCE LINE # 481
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 482
                                           ; SOURCE LINE # 484
0005 22                RET     
             ; FUNCTION _HotKey_Fn_E5H (END)

             ; FUNCTION _HotKey_Fn_E6H (BEGIN)
                                           ; SOURCE LINE # 488
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 489
                                           ; SOURCE LINE # 491
0005 22                RET     
             ; FUNCTION _HotKey_Fn_E6H (END)

             ; FUNCTION _HotKey_Fn_E7H (BEGIN)
                                           ; SOURCE LINE # 495
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 496
                                           ; SOURCE LINE # 498
0005 22                RET     
             ; FUNCTION _HotKey_Fn_E7H (END)

             ; FUNCTION _HotKey_Fn_E8H (BEGIN)
                                           ; SOURCE LINE # 500
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 501
                                           ; SOURCE LINE # 503
0005 22                RET     
             ; FUNCTION _HotKey_Fn_E8H (END)

             ; FUNCTION _HotKey_Fn_E9H (BEGIN)
                                           ; SOURCE LINE # 505
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 506
                                           ; SOURCE LINE # 508
0005 22                RET     
             ; FUNCTION _HotKey_Fn_E9H (END)

             ; FUNCTION _HotKey_Fn_EAH (BEGIN)
                                           ; SOURCE LINE # 510
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 511
                                           ; SOURCE LINE # 513
0005 22                RET     
             ; FUNCTION _HotKey_Fn_EAH (END)
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 18  


             ; FUNCTION _HotKey_Fn_EBH (BEGIN)
                                           ; SOURCE LINE # 515
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 516
                                           ; SOURCE LINE # 518
0005 22                RET     
             ; FUNCTION _HotKey_Fn_EBH (END)

             ; FUNCTION _HotKey_Fn_ECH (BEGIN)
                                           ; SOURCE LINE # 520
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 521
                                           ; SOURCE LINE # 523
0005 22                RET     
             ; FUNCTION _HotKey_Fn_ECH (END)

             ; FUNCTION _HotKey_Fn_EDH (BEGIN)
                                           ; SOURCE LINE # 525
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 526
                                           ; SOURCE LINE # 528
0005 22                RET     
             ; FUNCTION _HotKey_Fn_EDH (END)

             ; FUNCTION _HotKey_Fn_EEH (BEGIN)
                                           ; SOURCE LINE # 530
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 531
                                           ; SOURCE LINE # 533
0005 22                RET     
             ; FUNCTION _HotKey_Fn_EEH (END)

             ; FUNCTION _HotKey_Fn_EFH (BEGIN)
                                           ; SOURCE LINE # 535
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 536
                                           ; SOURCE LINE # 538
0005 22                RET     
             ; FUNCTION _HotKey_Fn_EFH (END)

             ; FUNCTION Oem_ScanActivity (BEGIN)
                                           ; SOURCE LINE # 544
                                           ; SOURCE LINE # 545
                                           ; SOURCE LINE # 546
0000 7800        E     MOV     R0,#LOW CORE_PMFLAG
0002 E6                MOV     A,@R0
0003 13                RRC     A
0004 13                RRC     A
0005 543F              ANL     A,#03FH
0007 30E01C            JNB     ACC.0,?C0058
000A         ?C0057:
C51 COMPILER V7.06   OEM_KBMATRIX                                                          07/06/2010 09:59:48 PAGE 19  

                                           ; SOURCE LINE # 548
000A 901601            MOV     DPTR,#01601H
000D E0                MOVX    A,@DPTR
000E 20E115            JB      ACC.1,?C0058
0011         ?C0059:
                                           ; SOURCE LINE # 550
0011 901606            MOV     DPTR,#01606H
0014 E0                MOVX    A,@DPTR
0015 54BF              ANL     A,#0BFH
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 551
0018 7F50              MOV     R7,#050H
001A 7E00              MOV     R6,#00H
001C 120000      E     LCALL   _vDelay1MS
                                           ; SOURCE LINE # 552
001F 901606            MOV     DPTR,#01606H
0022 E0                MOVX    A,@DPTR
0023 4440              ORL     A,#040H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 553
0026         ?C0058:
0026 22                RET     
             ; FUNCTION Oem_ScanActivity (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    332    ----
   CONSTANT SIZE    =    400    ----
   XDATA SIZE       =   ----      22
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
