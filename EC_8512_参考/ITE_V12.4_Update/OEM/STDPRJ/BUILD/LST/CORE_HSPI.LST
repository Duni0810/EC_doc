C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE CORE_HSPI
OBJECT MODULE PLACED IN SOURCE\CORE_HSPI.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe SOURCE\CORE_HSPI.C LA WL(1) CD OT(8,SIZE) OR

stmt level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: CORE_HSPI.C
   3           *
   4           * Copyright (c) 2009- , ITE Corporation. All Rights Reserved.
   5           *
   6           * You may not reproduce, distribute, publish, display, perform, modify, adapt,
   7           * transmit, broadcast, present, recite, release, license or otherwise exploit
   8           * any part of this publication in any form, by any means, without the prior
   9           * written permission of Insyde Software Corporation.
  10           *---------------------------------------------------------------------------*/
  11          #include "CORE_INCLUDE.H"
  12          #include "OEM_INCLUDE.H"
  13          
  14          //----------------------------------------------------------------------------
  15          // Disable HSPI interface pins 
  16          //----------------------------------------------------------------------------
  17          void GPIO_HSPI_INIT(void)
  18          {
  19   1              GPCRH3 = INPUT;                 // Set input mode
  20   1              GPCRH4 = INPUT;                 // Set input mode
  21   1              GPCRH5 = INPUT;                 // Set input mode
  22   1              GPCRH6 = INPUT;                 // Set input mode
  23   1          SET_MASK(RSTC4,BIT0);           // Reset SPI
  24   1      }
  25          
  26          //----------------------------------------------------------------------------
  27          // Enable HSPI interface
  28          //----------------------------------------------------------------------------
  29          void Enable_HSPI(void)
  30          {
  31   1              GPCRH3 = PALT;                  // Set HSPI mode
  32   1              GPCRH4 = PALT;                  // Set HSPI mode
  33   1              GPCRH5 = PALT;                  // Set HSPI mode
  34   1              GPCRH6 = PALT;                  // Set HSPI mode
  35   1          
  36   1              FLHCTRL1R = 0x00;                           // Flash Control Register 1
  37   1              HCTRL2R = 0x10;                             // Host Control 2 Register
  38   1          HINSTC1 = (ENDPI+ENDEI);        // Host Instruction Control 1
  39   1          
  40   1              R103A = 0x10;                               // set bit4 for not SST SPI ROM
  41   1                                                                          // clear bit4 for SST SPI ROM or set bit4 for not SST SPI ROM
  42   1                                                  // For phoenix bios    
  43   1                                                  
  44   1          SET_MASK(IER7,BIT3);            // Enable interrupt 
  45   1          SET_MASK(ISR7,BIT3);            // W/C interrupt status
  46   1      }
  47          
  48          //----------------------------------------------------------------------------
  49          // Disable HSPI interface
  50          //----------------------------------------------------------------------------
  51          void Disable_HSPI(void)
  52          {
  53   1              GPCRH3 = INPUT;                 // Set input mode
  54   1              GPCRH4 = INPUT;                 // Set input mode
  55   1              GPCRH5 = INPUT;                 // Set input mode
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 2   

  56   1              GPCRH6 = INPUT;                 // Set input mode
  57   1      
  58   1          CLEAR_MASK(IER7,BIT3);          // Disable HSPI interrupt 
  59   1          SET_MASK(ISR7,BIT3);            // W/C interrupt status
  60   1          HCTRL2R = 0x80;             
  61   1          SET_MASK(RSTC4,BIT(0));         // Reset SPI
  62   1      }
  63          
  64          #pragma ot(8, speed)
  65          //----------------------------------------------------------------------------
  66          // Instructino is valid
  67          //----------------------------------------------------------------------------
  68          void HSPI_RamCode(void)
  69          {
  70   1          if((DSINST==SPICmd_Erase4KByte)||(DSINST==SPICmd_BYTEProgram)||(DSINST==SPICmd_Erase64KByte))  // Eras
             -e 4k 64K and page program command
  71   1          {
  72   2              if(DSADR2==HSPI_ECCodeSpaceAddr)    // EC code space
  73   2              {
  74   3                  HSPI_SelfRamCode_Index = 0x33;
  75   3                  return;
  76   3              }
  77   2              ET1 = 0;                                    // Disable timer1 interrupt
  78   2              TH1 = (T_Timer_85ms)>>8;            // set timer1 counter 85 ms 
  79   2              TL1 = (T_Timer_85ms);               // set timer1 counter 85 ms
  80   2              TR1 = 1;                                    // enable timer1
  81   2              TF1 = 0;                                    // clear overflow flag
  82   2      
  83   2              HINSTC1 |= DISSV+DISS;          // Allow instruction
  84   2      
  85   2              while(!TF1)
  86   2              {
  87   3                  if(IsFlag1(ISR7, BIT3))
  88   3                  {
  89   4                      if(DSADR2==HSPI_ECCodeSpaceAddr)    // EC code space
  90   4                      {
  91   5                          HSPI_SelfRamCode_Index = 0x33;
  92   5                          TR1 = 0;
  93   5                          break;
  94   5                      }
  95   4                      HINSTC1 |= DISSV+DISS;  // Allow instruction
  96   4                      SET_MASK(ISR7,BIT3);
  97   4                      TH1 = (T_Timer_85ms)>>8;  // set timer1 counter 85 ms 
  98   4                      TL1 = (T_Timer_85ms);   // set timer1 counter 85 ms
  99   4                      TR1 = 1;                            // enable timer1
 100   4                      TF1 = 0;
 101   4                  }
 102   3              }
 103   2                  TR1 = 0;                                // disable timer1
 104   2                  TF1 = 0;                                // clear overflow flag
 105   2                  ET1 = 1;                                // Enable timer1 interrupt
 106   2          }
 107   1          else
 108   1          {
 109   2              if(DSADR2==HSPI_ECCodeSpaceAddr)    // EC code space
 110   2              {
 111   3                  HSPI_SelfRamCode_Index = 0x33;
 112   3                  return;
 113   3              }
 114   2              HINSTC1 |= DISSV+DISS;          // Allow instruction
 115   2          }   
 116   1      }
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 3   

 117          
 118          #pragma ot(8, speed)
 119          //----------------------------------------------------------------------------
 120          // Instructino is valid
 121          //----------------------------------------------------------------------------
 122          void HSPI_SelfRamCode(void)
 123          {
 124   1          HSPI_FPT_timeout = 0x00;
 125   1          
 126   1          HINSTC1 |= DISSV+DISS;              // Allow instruction
 127   1      
 128   1          ET1 = 0;                    // Disable timer1 interrupt
 129   1          TH1 = 0x00;                 // set timer1 counter 85 ms 
 130   1          TL1 = 0x00;                 // set timer1 counter 85 ms
 131   1          TR1 = 1;                    // enable timer1
 132   1          TF1 = 0;                    // clear overflow flag
 133   1          
 134   1          while(1)
 135   1          {
 136   2              if (IsFlag1(KBHISR,IBF))
 137   2              {
 138   3                              HSPI_tempcmd = KBHIDIR;
 139   3              }
 140   2              if(IsFlag1(ISR7, BIT3))
 141   2              {
 142   3                  HINSTC1 |= DISSV+DISS;      // Allow instruction
 143   3                  HSPI_FPT_timeout = 0x00;
 144   3                  SET_MASK(ISR7,BIT3);
 145   3              }
 146   2              else
 147   2              {
 148   3                  if(HSPI_FPT_timeout>=200)// > 17 sec
 149   3                  {
 150   4                      TR1 = 0;                        // disable timer1
 151   4                      TF1 = 0;                        // clear overflow flag
 152   4                      ET1 = 0;                        // enable timer1 interrupt
 153   4                      HSPI_FPT_timeout = 0xff;
 154   4      
 155   4                      #if 1
 156   4                          GPCRH3 = INPUT;
 157   4                          GPCRH4 = INPUT;
 158   4                          GPCRH5 = INPUT;
 159   4                          GPCRH6 = INPUT;
 160   4                          CLEAR_MASK(IER7,BIT3);
 161   4                          SET_MASK(ISR7,BIT3);
 162   4                      HCTRL2R = 0x80;         
 163   4                      SET_MASK(RSTC4,BIT0);   // Reset SPI
 164   4                      WDTCON |= 0x01;         // WDTRST = 1 Reset watch dog timer.
 165   4                      WDTCON |= 0x02;         // WDTEN  = 1 Enable watch dog.     
 166   4                          while(1);                   // Wait for watch dog time-out
 167   4                          #else
                              ExitRamCodeCommand = 0xAA;
                              break;
                              #endif
 171   4                  }
 172   3                  if(TF1)
 173   3                  {
 174   4                      HSPI_FPT_timeout++;
 175   4                      TH1 = 0x00;                         // set timer1 counter 85 ms 
 176   4                      TL1 = 0x00;                         // set timer1 counter 85 ms
 177   4                      TF1 = 0;                            // clear overflow flag
 178   4                  }
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 4   

 179   3              }
 180   2          }
 181   1          main();
 182   1      }
 183          
 184          //-----------------------------------------------------------------------------
 185          // The function will long jmp to 0xFE00
 186          //-----------------------------------------------------------------------------
 187          void HSPI_JmpTo0XFE00(void)
 188          {
 189   1          FlashECCode();                          // Jmp to 0xFE00
 190   1      }
 191          
 192          //-----------------------------------------------------------------------------
 193          // Process HSPI ISR
 194          //-----------------------------------------------------------------------------
 195          void HSPI_Process(void)
 196          {
 197   1          DisableAllInterrupt();                  // Disable all interrupt 
 198   1          SET_MASK(FBCFG,SSMC);                       // enable scatch RAM
 199   1          HSPI_JmpTo0XFE00();                     // Go to HSPI_RamCode();
 200   1          CLEAR_MASK(FBCFG,SSMC);                 // disable scatch RAM
 201   1          if(HSPI_SelfRamCode_Index==0x33)        
 202   1          {
 203   2              HSPI_SelfRamCode_Index = 0x00;
 204   2              LoadSPIFucnToRam(HSPI_SelfRamCode);     // Load function to ram
 205   2              SET_MASK(FBCFG,SSMC);               // enable scatch RAM
 206   2              HSPI_JmpTo0XFE00();                 // Go to HSPI_SelfRamCode();
 207   2          }
 208   1          SET_MASK(IER7,BIT3);                    // Enable HSPI interrupt
 209   1      }
 210          
 211          //-----------------------------------------------------------------------------
 212          // Need re-load HSPI ram code function to memory
 213          //-----------------------------------------------------------------------------
 214          void HSPI_SetReloadRamCodeFlag(void)
 215          {
 216   1          #ifdef HSPI
                  SET_MASK(HSPI_Misc1, HSPI_ReLoadHSPIRamCode);
                  #endif
 219   1      }
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION GPIO_HSPI_INIT (BEGIN)
                                           ; SOURCE LINE # 17
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
0000 90164B            MOV     DPTR,#0164BH
0003 7480              MOV     A,#080H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 20
0006 A3                INC     DPTR
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 21
0008 A3                INC     DPTR
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 22
000A A3                INC     DPTR
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 23
000C 902011            MOV     DPTR,#02011H
000F E0                MOVX    A,@DPTR
0010 4401              ORL     A,#01H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 24
0013 22                RET     
             ; FUNCTION GPIO_HSPI_INIT (END)

             ; FUNCTION Enable_HSPI (BEGIN)
                                           ; SOURCE LINE # 29
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0000 90164B            MOV     DPTR,#0164BH
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 32
0005 A3                INC     DPTR
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 33
0007 A3                INC     DPTR
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 34
0009 A3                INC     DPTR
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 36
000B 901031            MOV     DPTR,#01031H
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 37
000F 901036            MOV     DPTR,#01036H
0012 7410              MOV     A,#010H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
0015 901058            MOV     DPTR,#01058H
0018 7403              MOV     A,#03H
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 40
001B 90103A            MOV     DPTR,#0103AH
001E 7410              MOV     A,#010H
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 44
0021 901121            MOV     DPTR,#01121H
0024 E0                MOVX    A,@DPTR
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 6   

0025 4408              ORL     A,#08H
0027 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 45
0028 901120            MOV     DPTR,#01120H
002B E0                MOVX    A,@DPTR
002C 4408              ORL     A,#08H
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 46
002F 22                RET     
             ; FUNCTION Enable_HSPI (END)

             ; FUNCTION Disable_HSPI (BEGIN)
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
0000 90164B            MOV     DPTR,#0164BH
0003 7480              MOV     A,#080H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 54
0006 A3                INC     DPTR
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 55
0008 A3                INC     DPTR
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 56
000A A3                INC     DPTR
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 58
000C 901121            MOV     DPTR,#01121H
000F E0                MOVX    A,@DPTR
0010 54F7              ANL     A,#0F7H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 59
0013 901120            MOV     DPTR,#01120H
0016 E0                MOVX    A,@DPTR
0017 4408              ORL     A,#08H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 60
001A 901036            MOV     DPTR,#01036H
001D 7480              MOV     A,#080H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
0020 902011            MOV     DPTR,#02011H
0023 E0                MOVX    A,@DPTR
0024 4401              ORL     A,#01H
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 62
0027 22                RET     
             ; FUNCTION Disable_HSPI (END)

             ; FUNCTION HSPI_RamCode (BEGIN)
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
0000 901055            MOV     DPTR,#01055H
0003 E0                MOVX    A,@DPTR
0004 6420              XRL     A,#020H
0006 600A              JZ      ?C0005
0008 E0                MOVX    A,@DPTR
0009 6402              XRL     A,#02H
000B 6005              JZ      ?C0005
000D E0                MOVX    A,@DPTR
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 7   

000E 64D8              XRL     A,#0D8H
0010 7058              JNZ     ?C0004
0012         ?C0005:
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
0012 901057            MOV     DPTR,#01057H
0015 E0                MOVX    A,@DPTR
0016 B47E02            CJNE    A,#07EH,?C0006
                                           ; SOURCE LINE # 73
                                           ; SOURCE LINE # 74
0019 8056              SJMP    ?C0028
                                           ; SOURCE LINE # 76
001B         ?C0006:
                                           ; SOURCE LINE # 77
001B C2AB              CLR     ET1
                                           ; SOURCE LINE # 78
001D E4                CLR     A
001E F58D              MOV     TH1,A
                                           ; SOURCE LINE # 79
0020 758B01            MOV     TL1,#01H
                                           ; SOURCE LINE # 80
0023 D28E              SETB    TR1
                                           ; SOURCE LINE # 81
0025 C28F              CLR     TF1
                                           ; SOURCE LINE # 83
0027 901058            MOV     DPTR,#01058H
002A E0                MOVX    A,@DPTR
002B 440C              ORL     A,#0CH
002D F0                MOVX    @DPTR,A
002E         ?C0008:
                                           ; SOURCE LINE # 85
002E 208F32            JB      TF1,?C0009
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
0031 901120            MOV     DPTR,#01120H
0034 E0                MOVX    A,@DPTR
0035 30E3F6            JNB     ACC.3,?C0008
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
0038 901057            MOV     DPTR,#01057H
003B E0                MOVX    A,@DPTR
003C B47E0A            CJNE    A,#07EH,?C0011
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
003F 900000      E     MOV     DPTR,#HSPI_SelfRamCode_Index
0042 7433              MOV     A,#033H
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 92
0045 C28E              CLR     TR1
                                           ; SOURCE LINE # 93
0047 801A              SJMP    ?C0009
                                           ; SOURCE LINE # 94
0049         ?C0011:
                                           ; SOURCE LINE # 95
0049 901058            MOV     DPTR,#01058H
004C E0                MOVX    A,@DPTR
004D 440C              ORL     A,#0CH
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
0050 901120            MOV     DPTR,#01120H
0053 E0                MOVX    A,@DPTR
0054 4408              ORL     A,#08H
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 8   

0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 97
0057 E4                CLR     A
0058 F58D              MOV     TH1,A
                                           ; SOURCE LINE # 98
005A 758B01            MOV     TL1,#01H
                                           ; SOURCE LINE # 99
005D D28E              SETB    TR1
                                           ; SOURCE LINE # 100
005F C28F              CLR     TF1
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
0061 80CB              SJMP    ?C0008
0063         ?C0009:
                                           ; SOURCE LINE # 103
0063 C28E              CLR     TR1
                                           ; SOURCE LINE # 104
0065 C28F              CLR     TF1
                                           ; SOURCE LINE # 105
0067 D2AB              SETB    ET1
                                           ; SOURCE LINE # 106
0069 22                RET     
006A         ?C0004:
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
006A 901057            MOV     DPTR,#01057H
006D E0                MOVX    A,@DPTR
006E B47E07            CJNE    A,#07EH,?C0013
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
0071         ?C0028:
0071 900000      E     MOV     DPTR,#HSPI_SelfRamCode_Index
0074 7433              MOV     A,#033H
0076 F0                MOVX    @DPTR,A
0077 22                RET     
                                           ; SOURCE LINE # 113
0078         ?C0013:
                                           ; SOURCE LINE # 114
0078 901058            MOV     DPTR,#01058H
007B E0                MOVX    A,@DPTR
007C 440C              ORL     A,#0CH
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
                                           ; SOURCE LINE # 116
007F         ?C0007:
007F 22                RET     
             ; FUNCTION HSPI_RamCode (END)

             ; FUNCTION HSPI_SelfRamCode (BEGIN)
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 124
0000 E4                CLR     A
0001 900000      E     MOV     DPTR,#HSPI_FPT_timeout
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 126
0005 901058            MOV     DPTR,#01058H
0008 E0                MOVX    A,@DPTR
0009 440C              ORL     A,#0CH
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 128
000C C2AB              CLR     ET1
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 9   

                                           ; SOURCE LINE # 129
000E E4                CLR     A
000F F58D              MOV     TH1,A
                                           ; SOURCE LINE # 130
0011 F58B              MOV     TL1,A
                                           ; SOURCE LINE # 131
0013 D28E              SETB    TR1
                                           ; SOURCE LINE # 132
0015 C28F              CLR     TF1
0017         ?C0014:
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0017 901304            MOV     DPTR,#01304H
001A E0                MOVX    A,@DPTR
001B 30E108            JNB     ACC.1,?C0016
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
001E 90130A            MOV     DPTR,#0130AH
0021 E0                MOVX    A,@DPTR
0022 900000      E     MOV     DPTR,#HSPI_tempcmd
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
0026         ?C0016:
                                           ; SOURCE LINE # 140
0026 901120            MOV     DPTR,#01120H
0029 E0                MOVX    A,@DPTR
002A 30E315            JNB     ACC.3,?C0017
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
002D 901058            MOV     DPTR,#01058H
0030 E0                MOVX    A,@DPTR
0031 440C              ORL     A,#0CH
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
0034 E4                CLR     A
0035 900000      E     MOV     DPTR,#HSPI_FPT_timeout
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
0039 901120            MOV     DPTR,#01120H
003C E0                MOVX    A,@DPTR
003D 4408              ORL     A,#08H
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
0040 80D5              SJMP    ?C0014
0042         ?C0017:
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
0042 900000      E     MOV     DPTR,#HSPI_FPT_timeout
0045 E0                MOVX    A,@DPTR
0046 C3                CLR     C
0047 94C8              SUBB    A,#0C8H
0049 4038              JC      ?C0019
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
004B C28E              CLR     TR1
                                           ; SOURCE LINE # 151
004D C28F              CLR     TF1
                                           ; SOURCE LINE # 152
004F C2AB              CLR     ET1
                                           ; SOURCE LINE # 153
0051 74FF              MOV     A,#0FFH
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 10  

0053 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
0054 90164B            MOV     DPTR,#0164BH
0057 7480              MOV     A,#080H
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
005A A3                INC     DPTR
005B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
005C A3                INC     DPTR
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
005E A3                INC     DPTR
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
0060 901121            MOV     DPTR,#01121H
0063 E0                MOVX    A,@DPTR
0064 54F7              ANL     A,#0F7H
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
0067 901120            MOV     DPTR,#01120H
006A E0                MOVX    A,@DPTR
006B 4408              ORL     A,#08H
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
006E 901036            MOV     DPTR,#01036H
0071 7480              MOV     A,#080H
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
0074 902011            MOV     DPTR,#02011H
0077 E0                MOVX    A,@DPTR
0078 4401              ORL     A,#01H
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
007B 43D801            ORL     WDTCON,#01H
                                           ; SOURCE LINE # 165
007E 43D802            ORL     WDTCON,#02H
0081         ?C0020:
                                           ; SOURCE LINE # 166
0081 80FE              SJMP    ?C0020
                                           ; SOURCE LINE # 171
0083         ?C0019:
                                           ; SOURCE LINE # 172
0083 308F91            JNB     TF1,?C0014
                                           ; SOURCE LINE # 173
                                           ; SOURCE LINE # 174
0086 900000      E     MOV     DPTR,#HSPI_FPT_timeout
0089 E0                MOVX    A,@DPTR
008A 04                INC     A
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 175
008C E4                CLR     A
008D F58D              MOV     TH1,A
                                           ; SOURCE LINE # 176
008F F58B              MOV     TL1,A
                                           ; SOURCE LINE # 177
0091 C28F              CLR     TF1
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 180
0093 8082              SJMP    ?C0014
             ; FUNCTION HSPI_SelfRamCode (END)
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 11  


             ; FUNCTION L?0029 (BEGIN)
0000 901000            MOV     DPTR,#01000H
0003 E0                MOVX    A,@DPTR
0004 4480              ORL     A,#080H
0006 F0                MOVX    @DPTR,A
             ; FUNCTION HSPI_JmpTo0XFE00 (BEGIN)
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
0007 020000      E     LJMP    FlashECCode
             ; FUNCTION HSPI_JmpTo0XFE00 (END)

             ; FUNCTION HSPI_Process (BEGIN)
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
0000 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 198
                                           ; SOURCE LINE # 199
0003 120000      R     LCALL   L?0029
                                           ; SOURCE LINE # 200
0006 901000            MOV     DPTR,#01000H
0009 E0                MOVX    A,@DPTR
000A 547F              ANL     A,#07FH
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
000D 900000      E     MOV     DPTR,#HSPI_SelfRamCode_Index
0010 E0                MOVX    A,@DPTR
0011 B4330C            CJNE    A,#033H,?C0025
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
0014 E4                CLR     A
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
0016 7E00        R     MOV     R6,#HIGH HSPI_SelfRamCode
0018 7F00        R     MOV     R7,#LOW HSPI_SelfRamCode
001A 120000      E     LCALL   _LoadSPIFucnToRam
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 206
001D 120000      R     LCALL   L?0029
                                           ; SOURCE LINE # 207
0020         ?C0025:
                                           ; SOURCE LINE # 208
0020 901121            MOV     DPTR,#01121H
0023 E0                MOVX    A,@DPTR
0024 4408              ORL     A,#08H
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
0027 22                RET     
             ; FUNCTION HSPI_Process (END)

             ; FUNCTION HSPI_SetReloadRamCodeFlag (BEGIN)
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 219
0000 22                RET     
             ; FUNCTION HSPI_SetReloadRamCodeFlag (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V7.06   CORE_HSPI                                                             07/06/2010 09:59:46 PAGE 12  

   CODE SIZE        =    436    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
